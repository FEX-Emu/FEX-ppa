#!/usr/bin/make -f
# See debhelper(7) (uncomment to enable)
# output every command that modifies files on the build system.
export DH_VERBOSE = 1

include /usr/share/dpkg/pkg-info.mk

# see FEATURE AREAS in dpkg-buildflags(1)
export DEB_BUILD_MAINT_OPTIONS = optimize=-all hardening=-all sanitize=-all

# see ENVIRONMENT in dpkg-buildflags(1)
export DEB_CFLAGS_MAINT_STRIP = \
	-ffat-lto-objects \
	-flto=auto \
	-z \
	--fat-lto-objects \
	-Bsymbolic-functions \
	-fno-stack-clash-protection \
	-specs=/usr/share/dpkg/no-pie-compile.specs
export DEB_CXXFLAGS_MAINT_STRIP = \
	-ffat-lto-objects \
	-flto=auto \
	-fno-stack-clash-protection \
	-specs=/usr/share/dpkg/no-pie-compile.specs

export DEB_LDFLAGS_MAINT_STRIP = \
	-Wl,-Bsymbolic-functions \
	-z \
	--fat-lto-objects \
	-specs=/usr/share/dpkg/no-pie-compile.specs \
	-specs=/usr/share/dpkg/no-pie-link.specs

DEB_HOST_ARCH      ?= $(shell dpkg-architecture -qDEB_HOST_ARCH)

confflags =
buildflags = \
	CXXFLAGS="-Wno-deprecated-enum-enum-conversion"

confflags += \
	-DCMAKE_INSTALL_PREFIX=/usr \
	-DCMAKE_BUILD_TYPE=Release \
	-DENABLE_LTO=False \
	-DBUILD_TESTS=False \
	-DENABLE_JEMALLOC_GLIBC_ALLOC=False \
	-DENABLE_ASSERTIONS=False \
	-DTUNE_CPU=generic \
	-DTUNE_ARCH=generic \
	-GNinja \
	-DCMAKE_INSTALL_LIBDIR=/ \
	-DCMAKE_TOOLCHAIN_FILE=../Data/CMake/toolchain_mingw.cmake \
	-DOVERRIDE_VERSION=@FEX_VERSION@

override_dh_clean:
	rm -rf build_arm64ec
	rm -rf build_wow64
	dh_clean

override_dh_auto_configure:
	ls -l
	tar -xf llvm-mingw-20241218-ucrt-ubuntu-20.04-aarch64.tar.xz
	ls -l
	mkdir build_arm64ec
	mkdir build_wow64
	cd build_arm64ec && PATH=$(shell readlink -f .)/llvm-mingw-20241218-ucrt-ubuntu-20.04-aarch64/bin/:$(PATH) $(buildflags) cmake $(confflags) -DMINGW_TRIPLE=arm64ec-w64-mingw32 ..
	cd build_wow64 && PATH=$(shell readlink -f .)/llvm-mingw-20241218-ucrt-ubuntu-20.04-aarch64/bin/:$(PATH) $(buildflags) cmake $(confflags) -DMINGW_TRIPLE=aarch64-w64-mingw32 ..

override_dh_auto_build:
	cd build_arm64ec && PATH=$(shell readlink -f .)/llvm-mingw-20241218-ucrt-ubuntu-20.04-aarch64/bin/:$(PATH) ninja
	cd build_wow64 && PATH=$(shell readlink -f .)/llvm-mingw-20241218-ucrt-ubuntu-20.04-aarch64/bin/:$(PATH) ninja

override_dh_auto_install:
	export
	cd build_arm64ec && DESTDIR=../install/ ninja install
	cd build_wow64 && DESTDIR=../install/ ninja install

#override_dh_installdocs:
#	dh_installdocs

#override_dh_installchangelogs:
#	dh_installchangelogs

# If dwz is attempted to be used then it will complain about too few files for multifile optimization
# If also complains about unknown debugging sections in our cross-arch libraries
# Disable entirely since it doesn't support these things
override_dh_dwz:
	# Nothing here

# If dh_strip is enabled then it tries to strip ELF libraries of thunks which breaks
override_dh_strip:
	# Nothing here

override_dh_auto_test:
	# Explicitly disabled

%:
	dh $@ --buildsystem=cmake
