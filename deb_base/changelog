fex-emu-@ARCH_SUFFIX@ (2408~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2408

  - AOTIR
   - Change std::unique_ptr to fextl::unique_ptr (5fe405e)

  - ARM64EC
   - Install a custom call checker to bypass NTDLL function patches (2c3e6cb)
   - Set appropriate AFP and SVE256 state on JIT entry/exit (85d1b57)
   - Introduce FEX-side CRT and Windows API replacements (7b1d954)
   - Handle direct syscall instructions (24ea4b7)
   - Improvements to exception flag handling (cadb0a2)
   - Support the JIT API as is used by Windows (7ffd3e5)

  - AVX128
   - Optimize blends  (4882f10)
   - Optimize all cases of vpermq  (69ed39d)
   - Implement support for scalar FMA with AFP (9201ac5)
   - Improve VPERMILPS/PD and VPSHUFD  (f8c4c54)
   - Fixes vmovq loading too much data (b9a6cae)
   - Extends 32-bit indexes path for 128-bit operations  (7ccb252)
   - Optimize the vpgatherdd/vgatherdps cases that would fall back to ASIMD (22b2669)
   - Optimize QPS/QD variant of gather loads!  (3627de4)
   - Extend 32-bit address indices when possible  (aad7656)
   - Prescale addresses in gathers if possible (47d077f)

  - AllocatorHooks
   - Correct memory API usage on Windows (f98c010)
   - Allocate from the top down on windows (9d0b6ce)

  - ArgumentLoader
   - Removes static fextl::vector usage (f81fc4e)

  - Arm64
   - Implements support for DAZ using AFP.FIZ  (f8c6baa)
   - Implement support for SVE bitperm (b282620)
   - Remove one move if possible in FMA operations  (3bea08d)
   - Fixes long signed divide  (3d65b70)

  - Arm64Emitter
   - Reload STATE before SRA fill on ARM64EC (a742441)

  - CMake
   - Add option to build PDB debug info instead of DWARF (49b8dae)

  - CPUID
   - Adds a few missing CPU names for new CPU cores (c4ae761)

  - CodeEmitter
   - Removes vestigial vixl usage (2da819c)

  - Config
   - Little assume non-null check (f40bc13)
   - Converts two LUT maps over linear scan arrays (c5fe872)
   - Removes a static vector initializer (e0c783d)
   - Search more locations for the config directory on Windows (1f59f0e)

  - EmulatedFiles
   - Adds a few leaf CPUID flags (d385e49)
   - Fix bad formatting (d1249ec)

  - F80
   - Drop dependency on state stored in TLS (c3c2b61)

  - FEX
   - Moves HostFeatures querying to the frontend (434bffa)

  - FEXCore
   - Pass HostFeatures in to CreateNewContext directly (0ecfc65)
   - Drop deferred signal handling on Windows (1007f87)
   - Add a generic spill/fill-all syscall ABI and use for Windows (10ee963)
   - Removes ThreadManager (403fd62)
   - Refactor ExitHandler slightly (380ba0a)
   - Removes CPUBackendFeatures (1fe497d)

  - FixedSizePooledAllocation
   - Fix a race when unclaiming disowned buffers (228009c)

  - HostFeatures
   - Removes feature flags always supported by FEX (633f624)

  - IR
   - garbage collect premature F80Cmp optimizations (da51169)

  - InvalidationTracker
   - Better match Windows code invalidation behaviour (4a3250d)

  - Ioctl32
   - Removes static fextl::vector in ioctlemulation (9688f5e)

  - LogManager
   - Removes fextl::vector usage (870e395)

  - OpcodeDispatcher
   - Force noinline for the function call in the Bind helper (19e8492)
   - Replace hand-written wrapper templates with a generic utility (fc0b233)
   - Fix 8/16-bit rcr masking (bbf8dde)
   - Fixes rotates with zero not zero extending 32-bit result (97329cc)

   - X87
    - use less creative Refs (d92b6a9)

  - RA
   - fix interaction between SRA & shuffles (90a6647)

  - Scripts
   - Fix issue in aarch64_fit_native (94bb7eb)
   - Workaround deprecated parse_version (c42808c)
   - drop remnant of IR parser (991c694)

  - Softfloat
   - Fixes Integer indefinite return for 16-bit signed values  (f2d1f2d)

  - SpinWaitLock
   - Fixes missing newline in asm (1473129)

  - Syscalls
   - Updates for v6.10  (dd26b0c)

  - Telemetry
   - Remove VEX flag (5c9bb65)
   - Change how visibility of telemetry values work (b8e864f)

  - Threads
   - Setup the stack tracker to not need global initialization (93eead2)

  - VDSO
   - Stop using a vector for a static (04592f8)

  - WOW64
   - Support the JIT API as used by Windows (03ca3e7)
   - Mark the FEX dll as a wine builtin (635182b)

  - Windows
   - Pull in additional method and structure definitions from wine (f75bd2f)
   - Commonise TSOHandlerConfig (2fdd80f)
   - Report as an AMD64 processor when targeting ARM64EC (dbac23b)

  - X87
   - save uop in ReconstructFTW (f72cee4)

  - Misc
   - Directly use the EC code bitmap for determining page arch (201fe6e)
   - Don't apply the address-size flag to segment addresses (83fedd6)
   - Commonise logging and fallback to a log file for debug output on Windows (dedf4a9)
   - Fix nasm warning in Rounding.asm (069e2ce)
   - Reuse Top in ReconstructFSW_Helper (941fd9c)
   - ASM Tests: X87 Rounding modes (d24d0a9)
   - Fix call to FNINITF64 and refactor (c2092bf)
   - Test running scripts tell ctest of skipped tests (a6cf7fa)
   - json_ir_generator: stop prefixing arguments (6b91e0c)
   - x87 Stack Optimization (d507f4c)
   - Optimize zero x87 flags (77ec950)
   - Add x87 memcpy instcountci tests (e4b7a65)
   - Autogenerate LoweredX87() query, misc json_ir_generator cleanup in the area (17a55fb)
   - X87 Stack Ops Auto-marking (d204155)
   - Remove unused function MmapOverride (924b8c1)
   - ARM64EC frontend (6df51a5)
   - Remove Disabled_Tests file (e65545a)
   - Try to delete RCLSE again (d79b7fc)
   - Enable coverage configuration for FEX (b6e1469)
   - Implement support for SSE4.1/AVX NT loads (e25918d)
   - Fix all the warnings (9a8694c)
   - OpcodeDispatcher: Avoid template monomorphization to reduce FEXLoader binary size (070a914)
   - Drop deferred flag infrastructure (72d6c8e)
   - Tests for X87 FTST (3ef9ea9)
   - VCVT{T,}PD2DQ fixes and optimization (af6a0be)
   - Use nproc only if TEST_JOB_COUNT not specified (4501123)
   - FEXCore ARM64EC CI support (968d5e0)
   - Fix CF with small shifts (9bad09c)
   - Fix 8/16-bit RCR (653bf04)
   - JIT: fix ShiftFlags masking (b77a25b)
   - Fix 16-bit SBB (692c2fa)

  - fextl
   - Properly handle nullptr arguments in fextl::default_delete (8381d44)

  - github
   - Vixl simulator enable more asm tests (09c4a55)

  - man
   - Fixes newline issue with strenum (3d9114b)

  - unittests
   - Fixes vpblend unittest (f9bdf0b)
   - Extends vinsert{i,f}128 tests for garbage data (95a9f32)

  - x87StackOptimizationPass
   - Default initialise StackMemberInfo members (3e59fc0)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 12 Aug 2024 22:10:36 +0000

fex-emu-@ARCH_SUFFIX@ (2407~1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fixes missing externals project from source package.

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 04 Jul 2024 01:22:41 +0000

fex-emu-@ARCH_SUFFIX@ (2407~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2407

  - ARM64
   - Adds new FMA vector instructions (00cf8d5)

  - AVX128
   - Fixes vmovlhps (e2d4010)
   - Minor optimization to 256-bit vpshufb (5821054)
   - Fixes scalar FMA accidentally using vector wide (4626145)
   - Minor optimization to vmov{l,h}{ps,pd} (cf24d3c)
   - Some quick bugfixes (739ac0f)
   - Enable all the things (e519bf5)
   - Fixes wide shifts (a031a49)
   - F16C support (4d821b8)
   - Implement support for gathers (6226c7f)
   - FMA3 (7d939a3)
   - fix VPCLMULQDQl (5da205d)
   - More instructions Part 4 (77aaa9a)
   - Fix vmovntdqa failing to zero upper 128-bits (7ff9622)
   - Fixes SSE4.2 string compare instructions (dce1b24)
   - More instructions Part 3 (8c751d7)
   - More instructions (ddb9f6d)
   - More various instructions (be8ff9c)
   - Some pun pickles, moves and conversions (7bbbd95)
   - Move moves! (f489135)

  - Arm64
   - Minor VBSL optimization with SVE128  (2e6b08c)
   - Remove contiguous masked element optimization (dc44eb4)
   - Implement support for emulated masked vector loadstores (3d26e23)

  - Arm64Emitter
   - drop out of date comment (825d2c9)

  - BMI2
   - Ensure rorx immediate masks by operation size correctly. (54a1f7d)

  - CMake
   - Add a clang version check (5d67223)

  - CPUID
   - Oops, forgot to enable AVX2 (58e949e)
   - Update labeling on some reserved bits (2da1e90)

  - CodeEmitter
   - Fixes vector {ldr,str}{b,h} with reg-reg source (2e84f21)

  - CoreState
   - Move `InlineJITBlockHeader` to the start of the struct (933d622)

  - Externals
   - Update vixl submodule (b092b7a)

  - FEX
   - Consolidate JSON allocators and fix 3691 (643e964)

  - FEXConfig
   - Clear up TSO emulation string (8d92902)

  - FEXCore
   - remove very out-of-date optimizer docs (1a0d135)
   - Fixes address size override on GPR sources and destinations (53b1d15)
   - Implement AVX reconstruction helpers (6edf461)
   - Disentangle the SVE256 feature from AVX (13ebfb1)
   - Fixes Call with 32-bit displacement and address size override (e4ff3da)

  - FEXGetConfig
   - Support the ability to get TSO emulation facts (2e009be)

  - Frontend
   - Expose AVX W flag (2e5fa1e)

  - HostFeatures
   - Always disable AVX in 32-bit mode to protect from stack overflows (e99e252)
   - Work around Qualcomm Oryon RNG errata (df96bc8)

  - IR
   - rename _VBic -> _VAndn (67e1ac0)

  - InstCountCI
   - add segment register cases (e7bdb86)
   - explicitly disable AFP everywhere (7c7d767)

  - JIT
   - delete silly assert (61ff1b3)

  - Linux
   - Calculate cycle counter frequency for cpuinfo (76f3391)

  - LinuxEmulation
   - Add a helper for getting the ThreadStateObject from CPU frame (89b05a2)

  - OpcodeDispatcher
   - Implement support for non-temporal vector stores  (472a373)
   - Optimize x86 canonical vector zero register  (a451420)
   - Handle F16C operations (94fd100)
   - Fixes bug in pshuf{lw,hw}  (dfda673)
   - refactor Comiss helper (fac9972)
   - Adds initial groundwork for decomposed AVX operations  (b2eb8aa)
   - Refactor address modes (db0bdd4)
   - refactor zero vector loads (c57e9e0)

  - RA
   - priorize remat over spilling (46ca53a)

  - SMCTracking
   - Fix incorrect mprotect tracking (d7348c8)

  - Scripts
   - add update_instcountci.sh script (1971404)

   - InstallFEX
    - update PPA URL (9744d8d)

  - Vector
   - Helper refactorings (3f232e6)

  - Windows
   - Small fixes for compat with newer toolchains/wine versions (4e5da49)

  - X86Tables
   - add Literal() helper (8f769ce)

  - Misc
   - Use number of jobs as defined by TEST_JOB_COUNT (f453e15)
   - Revert removing RCLSE (02a218c)
   - Optimize gathers slightly (ba04da8)
   - Largest x87 blocks of code from games (500ad34)
   - (1700d54)
   - OpcodeDispatcher: optimize nzcv with asimd masked load/store  (2e32426)
   - Tiny opt for vzeroall (ad4d4c9)
   - Optimize vcvtps2ph (756fa2e)
   - Remove RCLSE (d1d41f5)
   - (1c24d63)
   - Fix VMOVLHPS instruction (3a310b8)
   - Adds back cmake error on x86-64 hosts (b2db04f)
   - Set tag properly in X87 FST(reg) (6e3643c)
   - Fixes AFP.NEP handling on scalar insertions (da21ee3)
   - VAES support (d2baef2)
   - Ignore python files for clang-format (053620f)
   - FXCH should set C1 to zero (87fe1d6)
   - First few commits from Ryan's AVX branch (29f6442)
   - json_ir_generator: don't print unrecoverable temps (f863b30)
   - Clean ups from my RCLSE branch (4965344)
   - Revert "OpcodeDispatcher: optimize logical flags" (9aa82ec)
   - Use FEX_HOSTFEATURES instead of FEX_ENABLEAVX (b17a2e9)

  - unittests
   - Adds MMX and x87 conflating unit test (d2437e6)
   - Fixes typo in vpcmpgtw test (d884eb9)
   - Split up vtestps unittest to accumulate flags in independent registers. (4d00a52)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 04 Jul 2024 01:11:45 +0000

fex-emu-@ARCH_SUFFIX@ (2406~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2406

  - AOTIR
   - Refactor interfaces to clarify ownership flow (3bac767)

  - CMake
   - Remove obsolete Catch2 setting (170204d)

  - CPUID
   - Adds Qualcomm Oryon product name (f7bfecd)

  - Config
   - Change default TSO options (6954ebe)

  - ConstProp
   - remove x86 jit leftover (58614ff)

  - Constprop
   - clean up (14bfe60)

  - FEXCore
   - Fixes the difference between CPL-0 and undefined instructions  (efe7c54)
   - Get rid of DeferredSignalFaultAddress and use the InterruptFaultPage (f27f187)
   - ARM64EC x64 entry/exit support  (2cae2f2)

   - docs
    - Adds programmer documentation about memory model emulation (a515b70)

  - FEXLoader
   - Cleanup FD extraction from environment variables (9dd6d8e)
   - Changes frontend thread management to wrap FEXCore thread objects (ef6d640)

  - FEXLogging
   - Changes representation of timestamp (9b1b9c2)

  - FEXServer
   - Removes temporary variable allocation (cd249e2)

  - FileManagement
   - Fix fstatat/statx with self and NOFOLLOW (6052b33)

  - Github
   - Support a timeout on checkout (6d3471b)

  - IR
   - drop IRParser (10de2f8)

  - InstCountCI
   - Adds SSE4.2 operations (ad13442)
   - Hardcode the offset to load tests into (663f3d8)

  - InstructionCountCI
   - add bytemark hot block (063b1eb)

  - JIT
   - factor out sub reg size conversion (948938b)

   - VectorOps
    - deduplicate common implementations (e3ec25d)

  - LinuxSyscalls
   - Cleanup envp copying in execve (55bfd63)

  - NFC
   - Fix typo (c5f8ea5)

  - OpcodeDispatcher
   - eliminate some Bfe's (7b4e484)
   - reorder some moves (926eefc)

  - Readme
   - Remove misleading text about x86 hosts being supported (eddb7d1)

  - RegisterAllocationPass
   - drop AVX flag (1fde5d7)

  - Misc
   - Library Forwarding: Add support for 32-bit OpenGL (4dc8648)
   - Find-and-replace OrderedNode* with Ref (c0bab70)
   - optimize shld (9ab0fa0)
   - (8c4860b)
   - Fix segfault when starting TestHarnessRunner with missing arguments (f90d2ae)
   - Optimize logical flags (20d5a26)
   - Track tied sources in the IR (ee96d60)
   - ConstProp fixes for Darwinia (ab0a6bb)
   - Optimize PCMPESTRI flags a bit (35ec54f)
   - Removes warnings (734258e)
   - Delete a big chunk of IR/Passes/* (9d0ff79)
   - (314fea3)
   - (3b7d30d)
   - Optimize asr (32f2dec)
   - Optimize large sign-extended constants (5497240)
   - Optimize sign-extension (0adcc77)
   - Simplify/fix our validation passes (c90036a)
   - Slightly improve pair coalescing + memcpy fix from RA branch (ca70e38)
   - ConstProp, RCLSE: simplifications (9a48310)
   - Allow garbage on more shifts (85776c2)
   - clang-format: left-align escaped newlines (e3e7f02)
   - (048c8de)
   - Use erase-remove idiom to remove element (3eb7a5b)
   - Fix left shift undefined behaviour (5bedf32)
   - Fix exec path where file needs to be ignored (3a7aa83)
   - SRA controlled burn (47242dc)
   - Fix WOW64 frontend with recent wine versions (55d1d6b)
   - Pass compulsory `mode` argument to `open` when `O_CREAT` is used (f70aafb)

  - unittests
   - add XeSS test (a01402d)

   - bextr
    - add SrcSize tests (033b1ce)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 13 Jun 2024 02:25:47 +0000

fex-emu-@ARCH_SUFFIX@ (2405~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2405

  - Allocator
   - Fixes compiling on Fedora 40 (7b88b0f)

  - AllocatorHooks
   - Mark JIT code memory as EC code on ARM64EC (bb24e14)

  - AppConfig
   - Disable libGL forwarding for steamwebhelper (02ebb6e)

  - Arm64
   - Adds another TSO hack to disable half-barrier TSO (1069cab)

  - CI
   - Drop use of obsolete ENABLE_X86_HOST_DEBUG setting (c126b20)

  - CPUID
   - Removes FEX version string from CPU model name (faa494c)
   - Fix inverted RDTSCP check (9781b95)
   - Enable enhanced rep movs in more situations (68e543c)

  - DebugData
   - Remove header (1616b4e)

  - FEXCore
   - Support x64 -> arm64ec calls (1a8b61b)

  - FHU
   - Switch over win32 file operations to std::filesystem (ae5e388)

  - IR
   - Remove VectorZero (a0f2cae)

  - JIT
   - fix neon vec4 faddv (fe70ec7)
   - fix ShiftFlags shuffles (376936c)
   - Adds support for spilling/Filling GPRPair (eedb120)

  - LookupCache
   - Track ARM64EC page state in the code cache (f0dad86)

  - OpcodeDispatcher
   - Implement support for SMSW (20bd864)
   - Fixes disabling TSO access on RSP SIB stores (1ba678f)
   - Add helper for making segment offset addresses (66cbb66)

  - RCLSE
   - disable store-after-store optimization (5cb11ae)

  - X87
   - Simplify constant loading for FLD family (271700e)

  - Misc
   - Library Forwarding: Support libGL/libvulkan without forwarding libX11 (b33e0e3)
   - clang-format: allow overriding clang-format (3fda47e)
   - Fix 8/16-bit ADC/SBC (9c6f749)
   - Library Forwarding: Fix issues with libGL's fake X11 dependency (81a4206)
   - Factor out SetWriteCursorBefore (a0bf6a4)
   - WOW64 backend code invalidation fixes (81c219c)
   - Clang Format file and script (53bed6d)
   - CI workflow to check clang-format usage on pull requests (f9097c0)
   - Add second reformat to git blame ignore file (55c054b)
   - Reformat until fixed-point (07e58f8)
   - Create .git-blame-ignore-revs with whole-tree reformat sha (7e97db8)
   - Remove trace of clang-tidy experiment from CMakeLists.txt (7614ac9)
   - Whole-tree reformat (1d806ac)
   - Move const to the left in preparation for reformatting (028c220)
   - Enable jemalloc for ARM64EC (a9b7ad8)
   - Validate that we have no crossblock liveness (e91e1d5)
   - Eliminate xblock liveness for shifts (cbfa426)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 02 May 2024 18:39:14 +0000

fex-emu-@ARCH_SUFFIX@ (2404~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2404

  - Allocator
   - Cleanup StealMemoryRegions implementation (8a3d08e)

  - ConstProp
   - drop dead code (202a60b)

  - ELFParser
   - Stop using a VLA (32ec4a3)

  - Externals
   - Update Catch2 to v3.5.3 (b892da7)

  - FEXCore
   - Fixes priority of FEX_APP_CONFIG (7786c23)
   - Move nearly all IR definitions to internal  (e2a0953)
   - Moves CodeLoader to frontend (3bed305)
   - Moves CPUBackend definition internal (f6639c3)
   - Remove DebugStore map (2ad170b)
   - Adds more TSO control levers (24fd28e)
   - Removes vestigial mman SMC checking (542f454)
   - Fallback to the memcpy slow path for overlaps within 32 bytes (167896d)
   - Add non-atomic Memcpy and Memset IR fast paths (7dcacfe)

  - FEXLoader
   - Add a way to sleep a process on startup (624bc3f)
   - Add some debug-only tracking for FEX owned FDs (79454ed)

  - InstcountCI
   - Adds a block that is causing panic spilling (150af80)

  - IoctlEmulation
   - Add missing nouveau ioctl (6d94d79)

  - JIT
   - Optimize pmovmaskb with a named vector constant (ab8ee64)

  - Linux
   - Expose support for v6.8 (e33a76a)

   - Threads
    - Fixes a stack memory leak for pthreads (3d31291)

  - OpcodeDispatcher
   - clean up shifts (c43af8e)
   - drop ZeroMultipleFlags (b632f72)
   - eliminate xblock liveness for rcl/rcr (cd9ffd2)
   - eliminate branch in cmpxchg pair (aa26b62)
   - Fixes 32-bit mode LOOP RCX register usage  (7698347)
   - optimize LOOP/N/E (8852d94)
   - Implement support for the various prefetch instructions (2a9fcc6)
   - Implement rdpid (ba3029b)

  - RA
   - drop dead block interference code (f2d001e)
   - Removes VLA usage (67baff8)
   - Adds RIP when a block panic spills (a8b59c1)

  - RCLSE
   - Optimize store-after-store (ca6b2e4)

  - Telemetry
   - Allow redirecting directory that data is written to (970d5d5)
   - Adds tracker for non-canonical memory access crash (7f90ca5)
   - Rename old file instead of copying (002ca36)

  - Misc
   - Negate more to inline constants (aa8d04c)
   - Minor cleanups around flags (37f2b41)
   - Use scalar integer code to calculate PF (bd0b5ec)
   - Eliminate xblock liveness with rep cmp/lod/scas (e8abc88)
   - rewrite ROL/ROR (29c6281)
   - Fix reference to out of bounds address in offsetof (4214d9b)
   - optimize clc (b1ddd8c)
   - Moves FHU TypeDefines to FEXCore includes (5c29c9d)
   - Optimize cmpxchg with flagm (2a625a4)
   - Eliminate crossblock liveness in xsave/xrstor (d25ace4)
   - rewrite Demon Addition Adjust (DAA) and other demonic opcodes (7b74ca1)
   - Library Forwarding/vulkan: Fix query of vkCreateInstance function pointer (4ea6305)
   - Put <20M in double quotes to avoid truncate error (1450c92)
   - Removes false termux support (0c24aea)
   - Optimize DF representation (cd2a6ce)
   - Library Forwarding: Don't map float/double to fixed-size integers (4e269d8)
   - Disable assert in release (c37a12e)
   - Improve 32bit ld/st addressing mode propagation (ff0c763)
   - Library Forwarding: Fix accidental data copying when converting from host to guest layout (26a6679)

  - unittests

   - ASM
    - Adds a test for overlapping memcpy using rep movs (6ce366e)
    - Implements a unit test for #3478 (caff3cb)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Fri, 05 Apr 2024 22:30:31 +0000

fex-emu-@ARCH_SUFFIX@ (2403.1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fix build

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Tue, 05 Mar 2024 19:28:13 +0000

fex-emu-@ARCH_SUFFIX@ (2403~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2403

  - ASM
   - Another sign extend bug in #3421 (b7984e8)

  - Arm64
   - Stop moving source in atomic swap (98572b9)

  - Arm64Emitter
   - Introduce ARM64EC SRA mappings (6ec628f)

  - CMake
   - Define _M_ARM_64EC when building for ARM64EC (3e5694b)

  - FEXCore
   - Expose AbsoluteLoopTopAddress to the frontend (d4be2dc)
   - Add a frontend pointer to InternalThreadState (5769ffb)

  - FEXLoader
   - Allocate the second 4GB of virtual memory when executing 32-bit (0b34035)

  - FileFormatCheck
   - Fixes FD leak (0505b30)

  - InstCountCI
   - enable preserve_all (2f9449c)
   - add FMOD block (cc9c80d)
   - add The Witcher 3 block (60e8da0)

  - InstcountCI
   - Add a monster of a game block (f41674b)
   - Adds a vector addition loop from bytemark (44d1502)
   - Adds addressing limitations to instcountci (cf06799)

  - Linux
   - Converts passthrough syscalls to direct passthrough handlers (b74de53)
   - More safe stack cleanup for clone (9687ac5)
   - Make sure to destroy thread object when thread shuts down (a7c7fe4)

  - OpcodeDispatcher
   - Don't use AddShift with no shift (d24446e)

  - RedundantFlagCalculationElimination
   - fix missing NEG case (32a4abb)

  - Syscalls
   - Fix SourcecodeMap generation for GDB JIT integration (7e2f20c)

  - Misc
   - Removes steamwebhelper config (d66a83a)
   - Use SETF8/16 for 8/16-bit INC/DEC (ea7d169)
   - Library Forwarding: Update Vulkan definitions to v1.3.278 (2dd922c)
   - Optimize lock dec (009ae55)
   - Misc little opts (f27e224)
   - Fix reserving range check (4779fb7)
   - Update xxhash to v0.8.2 (139367d)
   - Optimize SBC (49e798a)
   - Update vixl  (8c0d5c6)
   - Capture a 64-bit process trying to jump to 32-bit syscall handler (946c805)
   - Track unittest dependencies through to the custom target (118b8b2)
   - Adds a unittest for a bug from #3421 (aa9d7c5)
   - Optimize ADC (5f16f35)
   - Fixes zero register flag generation (0ef72bf)
   - Adds MGRR hottest block on render thread (49ca0e2)
   - Fuse add + cmn -> adds (d8a1868)
   - Moves SignalDelegator TLS tracking to the frontend (9b93495)
   - Moves JITSymbol allocation (59ec88f)
   - Fix instcountci (9025673)
   - Simplify CalculateAF (5378ae2)
   - Library Forwarding: Add support for 32-bit Wayland (66feea9)
   - Implement small TSC scaling (2bcd285)
   - Cleanup NZCV metadata (9c38332)
   - Fixes VDSO crash in 64-bit code (bbac014)
   - Library Forwarding: Allocate packed arguments on the guest stack if needed (9cab746)
   - Library Forwarding: Disable struct padding for packed arguments (b888bb5)
   - Optimize 8/16-bit adds/subs (4721825)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Tue, 05 Mar 2024 02:06:32 +0000

fex-emu-@ARCH_SUFFIX@ (2402~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2402

  - Arm64
   - Removes a vtable indirection in syscalls  (743df8d)

   - BranchOps
    - Fix unused-variable warning (f515b1e)

  - ArmEmitter
   - Support single use forward labels (8c31630)

  - CPUID
   - Removes Init and just uses constructor (f5997a0)

  - Config
   - Fixes JSON parsing of "ArgumentHandler" types (bd1e029)

  - Dispatcher
   - Convert GetCompileBlockPtr to using PMF helper (82ce76b)
   - Removes unused asserting CompileBlock function (5b4e9c6)

  - Externals
   - Update xbyak to v7.02 and switch away from fork (9da08b4)

  - FEX
   - Removes legacy kernel 32-bit allocator (de2cd46)

  - FEXConfig
   - Initialize paths before trying to read configuration files (79526b9)

  - FEXCore
   - Fix RCL/RCR shift wraparound behaviour (c0be974)
   - Use TMP1-4 for values that need preserving across spills (0e97f8f)
   - Decompose some std::function usage to regular pointers (615cfe0)
   - Pass thread object to HandleUnalignedAccess (d488592)
   - Removes SRA option, it's now permanently enabled (5467c3e)
   - Removes context wide and map lookup (eea2e7b)
   - Optimize HostFeatures and CPUID feature calculation (0071c1b)
   - Warn if MDWE is set (00669a1)
   - Changes ParentThread ownership from the CTX to the frontend, take 2 (b4b8e81)
   - Describe exit function linking object with a structure (93ec676)
   - Removes stale references to x86 JIT (8665490)
   - Removes old InternalThreadState header (12b72f9)
   - Moves OS thread creation to the frontend  (0a4e064)
   - Moves XID check to the frontend (7524029)

  - FEXLinuxTests
   - Fix build warnings (d34302a)

  - FEXLoader
   - Moves thread management to the frontend  (5e26b77)
   - Temporarily disable CLONE_CLEAR_SIGHAND (26c9d5d)
   - Fix incorrect format strings (3a5ac39)

  - GdbServer
   - Fixes crash on gdb detach (a1cf14f)

  - HostFeatures
   - Supports runtime disabling of preserve_all (235f32c)

  - InstCountCI
   - Fixes test to not use relative data (3db31a6)

  - JIT
   - Fixes broken register in VTBX1 (9841983)

  - Jitarm64
   - Implements spin-loop futex for JIT blocks  (750b0b7)

  - Linux
   - Decouple thread object creation and tracking (5e5984a)
   - Implements a fault safe memcpy routine (8e3d4a3)
   - Adjust when clone allocates stack memory (bd13052)

  - OpcodeDispatcher
   - Fixes syscall rcx/r11 generation (56d8080)
   - Initial support for runtime long-mode switch  (4b37921)
   - Fixes flags generation in imul (3d2cbc5)
   - Optimize SIB addr calculation  (81c85d7)

  - PassManager
   - Removes unused exit handler (12923ba)

  - Scripts
   - More changes to InstallFEX script (b613576)
   - Updates InstallFEX with supported Ubuntu versions (eb5cf1a)

  - SpinLockWait
   - Fixes unexpected lock success (472a701)

  - SpinWaitLock
   - Removes unused variable in spin-loop fallback (a4a1d60)

  - TestHarnessRunner
   - Move to its own tool folder  (68d6cf5)

  - ThreadManager
   - StealAndDropActiveLocks in the child forked process (930d265)

  - Thunks
   - Add workarounds for pointers not readable by 32-bit guests (60b0852)
   - Allow querying customized functions through vkGetInstanceProcAddr (86c6ca3)

  - Tools
   - Adds new FEXpidof tool (be4d1a8)
   - Moves IRLoader to independent folder (9dda960)

  - VDSO
   - Fixes symbol fetching for a few symbols (4333261)

  - Windows
   - Commonise WOW64 logic that can be shared with ARM64EC (8ff4b52)

  - X86Tables
   - Converts tables to be mostly consteval (ec89a00)

  - Misc
   - Fix #3419 (780b486)
   - Add NZCV+PF/AF optimization pass (df3d693)
   - Fixes one mutex hang (ba41da7)
   - Optimize test -1 (806e5b8)
   - Optimize TST (4331753)
   - Clean up access to possible nullptr (cdcc432)
   - Revert "Add cmake option DISABLE_CLANG_PRESERVE_ALL" (435b67a)
   - Revert "Revert "FEXLoader: Moves thread management to the frontend"" (a41ebe2)
   - Eliminate spilling in sha256rnds2 and sha1rnds4 (557cb59)
   - Revert #3303 (6993f4f)
   - Improve XCHG operations (920a8db)
   - Library Forwarding: Handle cross-architecture differences of integer types (9c37c0f)
   - Optimize CDQOp (cec1814)
   - Optimize rotates (4d49ac7)
   - Code cleanup - mainly dead store removal; NFC (6d13d9f)
   - Optimize shifts a bit (ae7dc25)
   - Optimize bit manipulation instructions (f4086b2)
   - Add cmake option DISABLE_CLANG_PRESERVE_ALL (37a611b)
   - Library Forwarding: Don't attempt custom repacking for non-struct types (2884337)
   - Check that path arguments to TestHarnessRunner exist (3036f3b)
   - Allow upper garbage on a bunch of instructions (fa33520)
   - Fix typos; NFC (bc67910)
   - Optimize PTEST and VTESTP (31a4158)
   - Optimize PDEP (58f3d3c)
   - Library Forwarding: Flip order of nullptr check and custom repacking (d04f3a2)
   - Library Forwarding: Test interaction of struct repacking and assume_compatible_data_layout (3bfb4be)
   - Improvements to the Dockerfile (1627331)
   - Library Forwarding: Implement assisted struct repacking (6efc4a9)
   - Optimize GPR cmpxchg (f956f00)
   - Library Forwarding: Implement automatic argument repacking (8320723)
   - Fixes some new glibc allocations that cropped up (dae16aa)
   - Linux uprev to v6.6 (c333aac)
   - Revert "FEXLoader: Moves thread management to the frontend" (db7d7a6)
   - FEXCore interface cleaning (04a88ed)
   - Removes IRLoader, unittests, and public interface (f785b38)
   - Support disabling SHA in CPUID (058e691)
   - Library Forwarding: Emit layout helpers to allow repacking struct data (d806db5)
   - Fixes Proton again (b1c3737)
   - rm andn masking (0fe5e3d)

  - instcountci
   - Adds panicspill test from steamwebhelper (b937885)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 12 Feb 2024 18:48:58 +0000

fex-emu-@ARCH_SUFFIX@ (2312.1~2~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Fix Mantic clang tools

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 11 Dec 2023 23:03:33 +0000

fex-emu-@ARCH_SUFFIX@ (2312.1~1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Fix Mantic clang tools

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 11 Dec 2023 22:55:44 +0000

fex-emu-@ARCH_SUFFIX@ (2312.1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2312.1

  - FEXLoader: Temporarily disable CLONE_CLEAR_SIGHAND

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 11 Dec 2023 21:51:38 +0000

fex-emu-@ARCH_SUFFIX@ (2312~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2312

  - Arm64Emitter
   - Dedicate registers for PF/AF (9b64674)
   - Fixes warning (bf147f4)

  - Config
   - Removes Threads option (3c73357)

  - Dispatcher
   - Fixes corruption when spilling SRA registers (f6b1434)

  - EmulatedFiles
   - Stop relying on O_TMPFILE (2e24f34)

  - FEX
   - Only pass CPU tunables to FEXCore and FEXLoader (b4eeb96)

  - FEXCore
   - Removes GetProgramStatus (c8ef77c)
   - Removes InitializeContext API (b35fadf)
   - Fixes passing arguments to ABI helpers (d0f54bc)
   - Removes Get/SetCPUState (7de66ac)
   - Optimize memcpy and memset when direction is compile time constant (85a1c1f)
   - Removes FEX_PACKED from CPUState (8e892ec)
   - Moves debug strings to gdbserver (3f02d7c)
   - Start changing how thread creation works (f328fca)
   - Moves more SignalDelegator functions to the frontend (6e8af29)
   - Removes x86 DebugInfo table (8015ce2)
   - Removes GetExitReason (bdf4089)
   - Disables RPRES until AFP is audited and enabled (b027113)
   - Fixes imul returning garbage data (389c6b1)
   - Work around broken preserve_all support in Windows clang (98f9a65)

  - FEXLoader
   - Wire up gdbserver in the frontend (efc5eb2)

  - FEXRootFSFetcher
   - Supports extracting erofs images (aa1344a)

  - GdbServer
   - Switch over to a unix domain socket (0357bb2)

  - IR
   - Moves remaining NZCV operations to use DestSize (b619f38)

  - IRDumper
   - Fixes missing conditional name (8892580)

  - InstCountCI
   - Moves Sonic Mania code to 32-bit file (470615b)

  - InstructionCountCI
   - Remove Optimal flags (4a31b61)

  - JIT
   - Fixes crash in TestNZ (a8ab8bb)

  - OpcodeDispatcher
   - Optimize three sha instructions (0e1e4c1)
   - Make "not" not garbage  (3767f36)

  - ScopedSignalMask
   - Clean up API and use std::unique_lock/shared_lock (8726c8f)

  - Thunks

   - libX11
    - Change lock functions to nullptr by default (db63241)

  - Misc
   - Optimize BT/BTC/BTS/BTR (250ffb6)
   - Improvements for WOW64 compat with newer wine (43cf2e4)
   - More GdbServer improvements (1c11509)
   - Optimize shifts/rotates (c1d5fae)
   - Optimize selects & branches & more nzcv goodies (1e2d059)
   - Keep guest SF/ZF/CF/OF flags resident in host NZCV (af32539)
   - Add helper for deriving ops by opcode (3f1f7fa)

  - unittests

   - ASM
    - Adds unittest found from Ender Lilies that crashed with NZCV (996a4c0)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 04 Dec 2023 02:18:40 +0000

fex-emu-@ARCH_SUFFIX@ (2311.1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2311.1
  - FEX
    - Only pass CPU tunables to FEXCore and FEXLoader

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Sat, 11 Nov 2023 20:04:06 +0000

fex-emu-@ARCH_SUFFIX@ (2311~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  FEX Release FEX-2311

  - ARMEmitter
   - Fix GPR fill mask in `FillStaticRegs` (3702e51)

  - Arm64
   - Minor optimization to bfxil and bfi  (8181e53)

  - ArmEmitter
   - Adds sized Scalar 1 source and 2 source helpers (2e1389b)

  - CPUID
   - Adds some missing cpu core names (ff3f734)

  - Config
   - Fixes string enum parser with multiple arguments (bbd20b4)

  - External
   - Remove a spurious license (26ee63c)

  - FEXCore
   - Removes gdb pause check handler (d4a6b03)
   - Fixes bug in vector `ZextAndMaskingElimination` pass (a261d99)
   - Removes a warning about assume discarding side-effects (462fff2)
   - Renames raw FLAGS location names to signify they can't be used directly (8dab35c)
   - Implements support for RPRES  (b2a8b0c)
   - Support crypto extensions in HostFeatures override (fc70fc3)

   - FileLoading
    - Updates helper to load file that is backed by memory (190f7c2)

   - IR
    - Changes over to automated IR dispatch generation (6543a80)

  - FEXLinuxTests
   - Adds a unittest for eflags and signals around a inlined syscall (b92e716)
   - Compile tests with masm=intel (b45023b)
   - Temporarily limit thunk test execution to 64-bit guests (1ea40ae)

  - FEXLoader
   - Query runtime page size (65e8d09)

  - GDBServer
   - Preparation work to get this moved to the frontend  (e91c5ff)

  - GdbServer
   - Fixes returning thread names (1806519)

  - IR
   - Print assert code for IR EmitValidation (5431aa5)
   - Optimize unused result atomic fetch mop to just atomic mop (14e5ea1)
   - Adds scalar vector insert operations  (6253f4f)

  - InstCountCI
   - Update rounds{s,d} classification (a287f2a)
   - Adds two missing variants of movd/movq (8538f5b)
   - Support disabling flagm extensions  (6db2125)
   - Adds some multi instruction tests (4834236)
   - Support multiple instructions in the tests (f036a0b)
   - Adds missing atomic tests (a5f82a5)
   - Fixes recursive tests with same filename (9c36d10)
   - Support overriding AFP features (5a3cc7b)

  - JIT
   - Implements Print support for vixl sim (5b70209)

  - JITArm64
   - Fixes double munmap issue that was causing crashes (8ee5b5c)
   - Fixes bug in rpres scalar operations  (8f8f376)

  - Linux
   - Fixes issue with *at syscalls with absolute paths not working (cf9c2aa)
   - Fixes warning in 32-bit clock_settime (b4ddf36)

  - OpcodeDispatcher
   - Optimize palignr with zero immediate  (9612b2f)
   - Optimize pblendw  (ef5503f)
   - Optimize blendps  (f45722d)
   - Optimize 128-bit DPPS and DPPD  (77d9287)
   - Optimize a few 3DNow! operations  (4045bfd)
   - Allow garbage in upper bits for more ALU ops  (f5822f8)
   - Optimize DF pointer offset calculation (63e4c36)
   - Handle SSE vector moves into themselves a little better (5c93a08)
   - Remove unnecessary 128-bit truncating moves from StoreResult (ef321e4)
   - Put extra LoadSource options in a struct (6d39f36)
   - Remove redundant moves from rorx (efb479f)
   - Optimizes < 32-bit register push  (cc558fd)

  - TestHarnessRunner
   - Don't hardcode stack allocation to 4096 bytes (0f3d14e)

  - Thunks
   - Print error if guest-provided callbacks are called asynchronously (e305a9a)
   - Skip data layout analysis for types that are always assumed compatible (a379d50)
   - Fix function pointer support on 32-bit (39c5ab1)
   - Annotate pointer parameters throughout all thunked libraries (5bf7903)
   - Add new pointer annotations to assist data layout analysis (978f607)
   - Oops deleted an entry point (e0ef32e)
   - Fixes missing vulkan definitions (cb53a70)

   - xcb
    - Drop unused and incomplete support for asynchronous callbacks (15c825f)

  - VectorOps
   - Handle SVE VExtr a little better (2e69441)
   - Handle SVE VFCADD a little better (1cb8e48)
   - Handle SVE VURAvg a little better (3c5c23b)
   - Handle SVE VFDiv a little better (9379257)
   - Handle SVE VSMax/VSMin and VUMax/VUMin paths a little better (8238de0)

  - Misc
   - Preparatory patches for nzcv (5103f2d)
   - Prep commits for NZCV modelling (e018917)
   - (8f246b2)
   - (c612fa8)

  - github
   - Enables Vixl simulator on x86 host for instcountci (9ba78c9)

  - unittests
   - Adds test for bug from #3162 (c77a3d6)

   - ASM
    - Adds unittest for implicit flag clobber for #3254 (65b7d40)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Tue, 07 Nov 2023 17:46:16 +0000

fex-emu-@ARCH_SUFFIX@ (2310~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AppConfig
   - Removes Steam config (02da6d6)

  - Arm64
   - Fixes inline syscalls (4e9a114)
   - Optimize wide shifts slightly for 64-bit OpSize (f5c4e28)
   - Recover two unused vector vector temporary registers  (90f7937)

   - ALUOps
    - Remove spills in PEXT (4604c01)

   - VectorOps
    - Elide moves where applicable in 128-bit VSQXTUN2 (fd1b639)
    - Improve handling of 128-bit vector VInsElement (950a8db)
    - Elide moves in ASIMD VUShrNI2 if possible (b3269f2)
    - Assert VTMP1 and VTMP2 are sequential in VTBL2 (8168a49)
    - Fix SVE aliasing-path  move in VSShr (ffb5876)

  - CI
   - Run tests with <30s runtime first (e1eb151)

  - CPUID
   - Enabled Enhanced REP MOVSB/STOSB (6fe643d)

  - Config
   - Fixes core sanitization (da3e172)

  - ConstProp
   - Fixes unscaled signed 9-bit range (72d092e)

  - DeadContextStoreElimination
   - Silence unused function warning  (773e946)

  - ELFCodeLoader
   - Expose FSGSBase in getauxval HWCAP2 (fbc4bda)

  - FEX
   - Moves Linux utils and adds spdx (ba56e51)

   - Common
    - Adds SPDX identifier (9f5f09b)

   - Tools
    - Adds SPDX identifier (ddf4b5c)

  - FEXCore
   - Support CpuState relative vector named constants  (3413eb3)
   - Merge Arm64Dispatcher in to Dispatcher (935b3a3)
   - Removes x86 JIT. (879b41c)
   - Removes vestigial Interpreter code (65b6df9)
   - Support preserve_all ABI for interpreter fallbacks (fea72ce)
   - Gut interpreter (7d99eb0)
   - Adds SPDX identifier (67680d7)
   - Implements support for shifted bitwise ops (d578256)
   - Disable Enhanced REP MOVSB if Atomic TSO is enabled (0604336)
   - Defer setting x87 softflow rounding mode until use  (9866e23)
   - Minor optimization to StoreRegisterSRA  (6fdf2f9)

   - Include
    - Adds SPDX identifier (d86f41e)

   - JitSymbols
    - Buffer writes to reduce overhead (2ea2300)

  - FEXServerClient
   - Adds back ServerSocketPath config option  (e795ec6)

  - FHU
   - Prepend SPDX identifier (3b188b7)

  - FileManagement
   - Fix inverted boolean check for procfs/interpreter support (615ab8d)

  - Github
   - Changes jobs to have unique names (220761a)

  - HostFeatures
   - Fix x86 CLWB support check (6e08ac6)
   - Detect FlagM/2 (98f1487)

  - IR
   - Changes Select operation to not have implicit sizes  (a8c1720)
   - Changes crc32 operation to always return a 32-bit result. (6d9b524)
   - RCLSE: Partially reenables the RCLSE pass  (879fcdc)

  - InstCountCI
   - Enable running on x86 hosts  (a1a709f)
   - Support f64 reduced precision mode tests (5eed24a)
   - Fail CI if there was any difference. (93aeb15)
   - Adds negative immediate primary tests (c38beff)
   - Add log before compiling instruction (1804b00)
   - Adds missing instructions from Secondary OpSize tables (750d909)

  - OpcodeDispatcher
   - Don't mask logic op inputs (d1d3de8)
   - Optimize lock btr  (2b7e1d1)
   - Optimize reconstructing FSW (5fc8699)
   - Removes non-explicit SelectCC function  (43fd159)
   - Improve output of SHLX/SHRX/SARX (ad8b0c6)
   - Improve output of MULX (e574cfe)
   - Handle RORX corner cases better (647629a)
   - Optimize cmov  (c8e7c34)
   - Optimize CRC32  (96bbd01)
   - Optimize 16-bit MOVBE  (f84a264)
   - Optimize blendp{s,d} (92824f5)
   - Optimize pins{b,w,d,q} (213d3c4)
   - Optimize pextr{b,w}  (d4c6749)
   - Optimize shufpd (655cee0)
   - Implement shufps with VTBL2 in worst case (31d8283)
   - Optimize a bunch of shufps variants  (cfe620a)
   - Optimize 32-bit bswap  (ebdca02)
   - Optimize NOP vector move (f7e652b)
   - Minor optimization to BT/BTC/BTR/BTS (48521a4)
   - Update 32/64-bit RCL for operating size  (950007c)
   - Update 32/64-bit RCR for operating size (d029394)

  - PassManager
   - Optimize out CPUID and XGetBV calls (234e029)

  - RCLSE
   - Optimize redundant store->load operations (6dc5c0d)

  - Scripts
   - Update generate_doc_outline for moved FEXCore (9ff5544)

  - Thunks
   - Only build guest target for libfex_thunk_test if FEXLinuxTests are enabled (507cf82)
   - Analyze data layout to detect platform differences (48fa4f1)
   - Fix AddressSanitizer build (1439874)
   - Update Vulkan thunk to v1.3.261.1 (76d4637)
   - Avoid recompiling thunk interfaces on FEXLoader changes (533f359)
   - Minor restructuring and small cleanups (be07254)

   - wayland
    - Add support for APIs required by zink and Super Meat Boy (0d9dce9)

  - Tools
   - Fixes usage of waitpid in the face of EINTR (dda5861)

  - X87F64
   - Implement FABS with vector instruction (3a25dd6)
   - Use Bfe for rounding mode, FCHS use float instruction (ccfd770)

  - Misc
   - Minor AVX optimizations (3ba1c79)
   - Optimize ASCII flags (6b4ff4a)
   - Use adcs (ca87d86)
   - Optimize 8/16-bit CF calculation (8b3881b)
   - Optimize PF calculation in lahf (19a7b51)
   - More opts to the dispatcher + 1 to the JIT (bee9730)
   - Requiem for the x86 jit (86ad35c)
   - Add WOW64 JIT frontend (797c890)
   - Optimize reconstructing x87, harder (5444810)
   - Make x87 FCMOV slightly less terrible (65d558b)
   - Minor/flag opts (8b52308)
   - InstCountCI/VEX_map3: Add missing zeroing vperm2f128/vperm2i128 test cases (3d0b664)
   - Inline constant with PF calculation (9152fb0)
   - Optimize out carry invert for DEC (b6922df)

  - unittests
   - Instruct CTest to print output from tests on failure (e32601f)
   - Add test thunk library (000fb2e)

   - ASM
    - Implements tests for vpgatherqd/vgatherqps (ab4642a)
    - Implements tests for vpgatherqq/vgatherqpd (d94e5ce)
    - Implements tests for vpgatherdq/vgatherpq (dad7086)
    - Implements tests for vpgatherdd/vgatherps (85da0f0)
    - Adds unit test caught by #3153 (0d12cce)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 05 Oct 2023 22:17:42 +0000

fex-emu-@ARCH_SUFFIX@ (2309.1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Hotfix for fixing file accesses

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 07 Sep 2023 00:45:51 +0000

fex-emu-@ARCH_SUFFIX@ (2309~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARM64
   - Optimize vector zeroing (eaed5c4)

  - ARMEmitter
   - Handle SVE load and broadcast quadword groups (a9dea29)
   - Handle SVE load and broadcast element group (710a392)
   - Handle load/store multiple structures (scalar plus scalar) groups (eda67eb)
   - Handle SVE ADR (139dd4c)
   - Handle SVE CPY (immediate) (72357e5)
   - Migrate off vixl float utils (5a0a6dd)
   - Handle SVE FCPY (predicated) (8fce133)
   - Remove resolved TODO comment (5de7eee)
   - Handle contiguous first fault load (scalar plus scalar) group (0109e88)
   - Handle SVE FP multiply-add long groups (6f4a23d)

  - Arm64
   - Only allocate vixl::Decoder if enabled (2d78b1f)
   - Optimize AES operations by caching a zero register  (7f99738)
   - Optimize AESKeyGenAssist (02b891c)
   - Optimize VFMin/VFMax (0819338)
   - Optimize SVE VInsElement (1f2c5fc)
   - Stop abusing orr in LoadConstant  (6d562f8)
   - Optimize non-optimal BFI move case  (1029bb1)
   - Optimize CacheLine{Clear,Clean} (1343c14)
   - Adds stats to the disassembly (53ac8ab)
   - Implement first SVE-128bit optimization  (fe35135)
   - Remove erroneous LoadConstant (c4c7620)

   - ConversionOps
    - Remove redundant moves in AdvSIMD VInsGPR (6e4765d)
    - Add missing half-precision conversions to scalar functions (172c8f3)
    - Add scalar support to Vector_FToI  (a62ba75)

   - EncryptionOps
    - Use MOVI reg, #0 to zero vectors (4286d44)

   - VectorOps
    - Remove redundant moves in SVE VExtr when possible (4297e13)
    - Remove redundant moves from VSQXTN2/VSQXTUN2/VSQSHL/VSRSHR (5b8a0f1)
    - Remove redundant moves from SVE variable/immediate/vector shifts when possible (926b8c2)
    - Remove redundant moves from SVE BSL when possible (ec6548e)
    - Remove redundant moves from SVE V{S,U}Min/V{S,U}Max when possible (350bca9)
    - Remove redundant moves from SVE VFMin/VFMax when possible (2264058)
    - Remove moves from SVE VFDiv if possible (da098d8)
    - Remove redundant moves from SVE VURAvg if possible (2501ebc)
    - Remove redundant move in VFRSqrt SVE path (6ad053a)

  - Arm64Emitter
   - Stop saving and restoring platform register (affbcd2)
   - Ensure that 128-bit predicate is generated with SVE (49b8b7c)

  - CMake
   - Add mingw toolchain file (f1aa620)

  - Config
   - Minor changes (3885bc4)

  - ConstProp
   - Adds constpool distance heuristic (67a26a0)
   - Fix set-but-not-used mask variable (2f0c690)

  - Context
   - Adds helper to reconstruct and consume packed EFLAGS (ea96581)

  - Externals
   - Update Catch2 to v2.13.10 (e025d32)
   - Update fmt to 10.1.0 (b0ec419)

  - FEX
   - Adds instruction count CI (6c7371a)
   - Create a CommonTools static library (f318203)

  - FEXCore
   - Rework X87 tag word handling (8bae58d)
   - Allows disabling telemetry at runtime (d738538)
   - Adds telemetry around legacy segment register setting (a523858)
   - Allow for interrupting the JIT on block entry (fc84f6b)
   - Fixes bug with 32-bit adcx (da17e24)
   - Fixes Arm64 stats disassembly (099f29f)
   - Fixes vector shifts by zero (c77ed78)

   - IR
    - Fixes bug in IRDumper without specification (6cb0f52)

  - FEXInterpeter
   - Fixes compilation when telemetry is disabled (5cc30bd)

  - FEXInterpreter
   - Supports procfs/interpreter (016c3c0)

  - Filemanagement
   - Optimize GetSelf using a string_view  (9f3730f)

  - GIthub
   - Only enable InstCountCI on an ARM platform (df3d4ef)

  - Github
   - Adds a CI runner for 128-bit SVE testing  (969ad9b)

  - IR
   - Remove phi nodes (16f826c)
   - Adds printer for OpSize (2c2081c)
   - Adds IR::OpSize to IRDumper (e1c2033)
   - Removes implicit sized add (b40f784)
   - Removes implicit sized bfe (351c0ee)
   - Removes implicit sized and (8239f8a)
   - Removes implicit sized sub (59a4d15)
   - Removes bfi from variable size (227ba9f)
   - Removes implicit sized xor (9b55a34)
   - Removes implicit sized andn (e9a3848)
   - Removes implicit sized or (516f27b)
   - Removes implicit sized lshr (24a9254)
   - Removes implicit sized lshl (8534d3d)
   - Removes implicit sized mul ops (915e520)
   - Removes sext IR helper (a55616e)
   - Removes implicit sized {Create,Extract}ElementPair (6f66153)
   - Convert all Move+Atomic+ALU ops from implicit to explicit size (590345b)
   - Fixes RAValidation for 32-bit applications (547daf8)
   - Implements support for wide scalar shifts  (084d102)
   - Allow 128-bit broadcasts in VBroadcastFromMem (425b034)
   - Add VBroadcastFromMem opcode  (cfc6368)
   - Adds Option to run the IRDumper with more configurations (ea8fbc6)

   - ConstProp
    - Ensure that BFI with constant bitfields can optimize to Andn or Or (a2e5c23)

  - InstCountCI
   - Update for previous changes (b801bac)
   - Test rorx at max mask size (e2ac97f)
   - Fix some mislabeled instructions (4443c66)
   - Add newline to end of file (f4f9b20)
   - Support encoding expected Arm64 ASM in JSON (dc0cf98)
   - Update tests from actual ARM64 device (f95ef70)
   - Adds RNG support (dac220a)
   - Disables tests with unsupported configurations (da334fe)
   - Ensure output nasm name doesn't conflict (3c99fb8)
   - Adds primary tables  (63f28ea)
   - Adds secondary prefix tables (135b9ac)
   - Adds secondary tables  (24d01cd)
   - Adds Primary group tables (103e604)
   - Adds VEX map3 tables (e334278)
   - Adds VEX map group tables (7fe2d3b)
   - Adds FEX map2 tables  (871434d)
   - Adds VEX map1 tables (a464798)
   - Adds x87 table (1146c42)
   - Adds H0F38 table (a15934b)

  - InstructionCountCI
   - Adds three more instruction tables  (6d1fcfc)

  - Interpreter
   - Tie SSA data elements to supported vector width (e765bd8)
   - Use alias for temporary vector data (8b9ee99)

  - Linux
   - Call exit_group when application tries (0195bb6)

  - LogMan
   - Commonise log level to string conversion (b4d1726)

  - OpcodeDispatcher
   - Optimize CMC (c27f69d)
   - Fixes NZCV and PF flag compacting  (b18592f)
   - Remove final assumptions about small IR operating sizes (8017a91)
   - Cleans up RFLAGS size handling  (62fcf6c)
   - Optimize calls with push (7c81a0d)
   - Optimize BLENDV when xmm0 is one of the sources  (9fb8c95)
   - Removes erroneous debug log (012750f)
   - Optimize Get{Src,Dst}Size (c1b4c11)
   - Optimizes SSE movmaskps  (1d7c280)
   - Optimize PSHUF{LW, HW, D}!  (db3dc3e)
   - Optimize 128-bit movmaskpd  (bf12f08)
   - Optimize movddup from register (1f7d138)
   - Optimize cvtdq2pd from register source  (f36f070)
   - Optimizes movq (30a1a38)
   - Optimize nontemporal moves  (631655d)
   - Generate more optimal code for scalar GPR converts (0ef439f)
   - Optimize cvtps2pd  (80d871f)
   - Optimize MMX conversion operation  (4d58ec1)
   - Optimize addsubp{s,d} using fcadd  (200dbdd)
   - Cache named vector constants in the block  (df99b7b)
   - Optimize AddSubP{S,D}  (ab83ab4)
   - Optimize PMULH{U,}W using new IR operations (66c6f96)
   - Remove redundant moves from PCLMULQDQ and AES operations (1aa2c53)
   - Use new IR ops for pack instructions  (ee10153)
   - Optimizes scalar movd/movq (4b06069)
   - Remove redundant moves from remaining AVX ops (b646f4b)
   - Remove redundant moves from VPACKUSOP/VPACKSSOp (a40526a)
   - Remove unnecessary moves from AVX move ops where applicable (86ef6fe)
   - Remove unnecessary moves from AVXExtendVectorElements (6624f50)
   - Remove unnecessary moves in AVXVFCMPOp (cd1f401)
   - Remove redundant moves in AVX blend special cases (76430ba)
   - Optimize MOVHP{S,D} (819fe11)
   - Remove unnecessary moves from AVX inserts (adfd678)
   - Optimize MOVLP{S,D} loads  (bb2f710)
   - Remove unnecessary moves from AVX register shifts (5d44a44)
   - Remove redundant moves from AVX immediate shifts (fb65fb2)
   - Remove unnecessary moves from AVX conversion operations (36a5418)
   - Remove unnecessary moves from AVXVariableShiftImpl (ead141f)
   - Remove unnecessary move from VPHMINPOSUW (1414452)
   - Optimize phminposuw (ed7f1b0)
   - Optimize PFNACC  (6c7933e)
   - Optimize hsubp  (364f084)
   - Remove redundant move from VPSIGN (ffa8f1e)
   - Optimize pmuludq (9df94d8)
   - Remove redundant move in AVXVectorScalarALUOpImpl (71984fc)
   - Remove redundant moves in AVXVectorALUOp (3c88671)
   - Optimize pmaddwd  (185e3bf)
   - Optimize phsub  (3c49b32)
   - Handle zero immediate shifts better (3a2a576)
   - Optimizes mpsadbw  (8ee6262)
   - Optimize SSE/AVX pmaddubsw (34a7fef)
   - Implement support for push IR operation (9e4888c)
   - Improve SHA1MSG1 output (277345d)
   - Minor optimization around clearing flags  (3472234)
   - Eliminate redundant moves in {AVX}VectorRound (b973c19)
   - Eliminate unnecessary moves in {AVX}VFCMPOp (4c409ea)
   - Remove unnecessary moves in {AVX}VectorUnaryOp (ac53913)
   - Remove extraneous moves in {V}CVTSD2SS/{V}CVTSS2SD (2224c23)
   - Remove unnecessary moves in {AVX}VectorScalarALUOp  (6ce380d)
   - Remove redundant moves from {V}CVTSD2SI/{V}CVTSS2SI (8dade7e)
   - Remove some extraneous MOVs from VMOVSD/VMOVSS (add5bae)
   - Handle broadcasting cases in VPERMQ/VPERMPD (db60a2f)
   - Improve {V}PSRLDQ shift by 0 (f09d9af)
   - Remove unnecessary conditionals in {V}PSLLIOp (461ca6f)
   - Improve VMOVDDUP output (a4a68b4)
   - Improve output of {V}MOVSLDUP/{V}MOVSHDUP (f70b6f3)
   - Remove unused variable in AVXVectorUnaryOpImpl (6580796)
   - Eliminate unnecessary moves in AVXVectorUnaryOpImpl (0e52158)

   - Flags
    - Update SHLimm to use Opsize upfront  (2d22176)
    - Update ShiftLeft to use Opsize upfront (338cb19)

  - SignalDelegator
   - Fix build with telemetry disabled (81046ef)
   - Allow getting the internal configuration (6960fca)

  - Syscalls
   - Fix telemetry with exit_group (f0ab960)

  - X86Tables
   - Optimize MOVLPD stores  (42200bf)

  - X8764
   - Ensure frndint uses host rounding mode (7c6660f)

  - Misc
   - Defer PF calculation completely (0422895)
   - Remove ABINoPF option (8184c55)
   - Defer second XOR for AF (a8bc6bb)
   - Stop zeroing undefined flags (252ca88)
   - Defer AF extract (486f0ba)
   - Optimize ADD flag calculation (ee8092b)
   - Remove implicit sized IR ops part atomic (bc1e89d)
   - Remove implicit sized IR ops part 1 (5415e4c)
   - IR/Passes/RA: Enable SRA for 32-bit GPRs (6f2b3e7)
   - x86_64/MemoryOps: Fix mislabeled IR op messages (c5f358b)
   - Optimize PSIGN and VBSL (2d7a3a5)
   - Support for Config.json loading on WIN32 (d3f0c7e)
   - Move External/FEXCore/ to FEXCore/ (c9856da)
   - Various warning fixes (9d26af9)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Wed, 06 Sep 2023 05:29:09 +0000

fex-emu-@ARCH_SUFFIX@ (2308~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARMEmitter
   - Add missing atomic aliases (68cb6e61d)
   - Add cinc/cinv/csetm aliases (30ab4d3f5)
   - Add ngc/ngcs aliases (eebcbfda9)
   - Add bfc/bfxil aliases (d2bca9b99)
   - Add sbfiz/tst/ubfiz aliases (468106101)
   - Finish off remaining SVE Integer Wide Immediate - Unpredicated categories (2fc6542d1)
   - Implement cmn alias (1ce0ea8f3)

  - Arm64
   - Switch to using half barriers (94273fbf4)
   - Fixes LR corruption in 128-bit divides (5821175dd)
   - Optimize {Load,Store}ContextIndexed address generation (536b2ed49)
   - Only clear icache for code (0674dfab0)
   - Emitter: Handle LD1{*}/LDFF1{*} Vector + Immediate encodings (421214e72)

   - Emitter
    - Add remaining missing SVE predicate range assertions (64c72430b)
    - Deduplicate some more SVE implementations pt. 2 (0a1820d44)
    - Deduplicate some more SVE implementations (9c175da0e)
    - Reorganize some base opcode and assert locations (0be68a54d)
    - Simplify SVE immediate shift helper (e689c6fcf)
    - Collapse encoding cases for indexed dup  (d6697fce3)
    - Handle SVE FP convert precision group (e633ef7cf)
    - Handle SVE FP arithmetic with immediate (predicated) group (754bc1881)
    - Handle SVE XAR (842b71cf8)
    - Add helper for encoding SVE shift immediates (41b3c5266)
    - Deduplicate some opcode values (d7200e2a1)
    - Handle unsized contiguous STR variants (46d3f283b)
    - Handle ST1{*} scatter store variants (724a8e13b)
    - Simplify SVEMemOperand data union  (699c3f576)
    - Handle LD1{*}/LDFF1{*} scalar + vector load variants (5c27febbc)

   - VectorOps
    - Hoist asserts out of VInsElement cases (5b261b0d2)

  - ArmEmitter
   - Support 32-bit bitmask moves (d9b52fd67)

  - CMake
   - Allow overriding linker (0d6837f1a)
   - Fix pkg version extraction for xcb (96b428dca)
   - Stop installing fmt (2c3361be9)

  - ConstProp
   - Handle constant Bfi (29dc77c44)
   - Fix shift mask in const-prop (daeba0625)

  - Context
   - Pull out some long std::function declarations into aliases (7562ff230)

  - FEXCore
   - Ensure that the man page follows DESTDIR (d19670916)
   - Remove erroneous asserts in the project (f5262446a)
   - Removes unused TLS variable (6455c4817)
   - Fixes WIN32 compiling again (2283c73fa)
   - Minor cleanup (462feec2a)

   - Config
    - Adds support for enum mask configuration array (2c91b5cff)

  - FEXLinuxTests
   - Fixes race in smc-mt-2 (af35e1897)

  - FEXRootFSFetcher
   - Make verification percent easier to read (7765bbc7b)

  - FHU
   - Avoid calling faccessat on WIN32 (b34401bb3)
   - Fix WIN32 getcpu implementation (70d54122b)

  - Frontend
   - Remove unused ModRMDecoded instance (f9a9645ef)
   - Remove redundant lookups in BranchTargetInMultiblockRange() (c81b1c343)
   - Handle VSIB byte (4a7fa7f2b)

  - Github
   - Adds mingw build test workflow (0f748bd72)

  - IR
   - Expand to 16-bit opcodes (003c88e53)
   - Print SSA values as %123 instead of %ssa123 (599b64e97)
   - Optimize vector TSO loadstore address calculation (810c7d926)

   - Passes
    - Fixes DeadStoreElimination pass (ee66985ae)

  - JIT
   - Use TST instead of CMN (5a53c9231)

  - Jit
   - Add block links directly through the lookup cache on thread exit (8d8b64d2b)

  - Linux
   - Implement {recv,send}mmsg inside of socketcall (0a5db6c40)
   - Implement accept4 inside of socketcall (7c4e4c440)

  - LongDivideRemovalPass
   - Remove unused variable (759747b3c)

  - Mingw
   - Fixes compiling again (dc8f063a4)

  - OpcodeDispatcher
   - Optimize rotates (25b2af14f)
   - Optimize phsubsw/phaddsw (76059949e)
   - Optimize CMPXCHG{8B,16B} final comparison (6e15c9c21)
   - Optimize PSAD* to use vuabdl{2,}  (173b70d19)
   - Fixes SHRD by immediate OF flag calculation (52d7efda1)
   - Optimize 8/16-bit RCR (072f02788)
   - Another FCMov minor optimization (f7b7997c7)
   - Handle VSIB byte (6979dc9c4)
   - Remove unused member variables and reorganize (be7188699)
   - Minor optimization to phminposuw (d3a279510)
   - Optimize 32/64-bit SH{L,R}D with extr (3cd6c2d91)
   - Minor optimization to FILD (1b1e9e0fb)
   - Narrow use of LoadXMMRegister in StoreResult_WithOpSize (68a2441e6)
   - Fix and optimize PF calculation (1d7b4bb52)
   - Optimize ADD/ADC OF flag packing  (9722c4c5a)
   - Remove spurious bfe with flag storing (ddd6dbfdc)
   - Optimize MOVSS to register (7f2557e32)
   - Optimize MOVSS to memory destination (0121e858f)
   - Optimize some shifts size masking (98eda5e16)
   - Fixes bug with pcmpestri (592935790)
   - Optimize GetPackedRFLAG (8a4bfba47)
   - Optimize MASKMOVDQU and MASKMOVQ (69ea03f0e)

  - RCLSE
   - Rename `Node` to `ValueNode` (d83960d4d)

  - SignalDelegator
   - Moves last TLS variable to the frontend (b86abfbcc)

  - StructPackVerifier
   - Fixes missing cursorkind again (296adf183)

  - Thunks
   - Set bitness flags for 64-bit guests (96aa0a844)
   - Remove weak symbol definitions (ff3b40400)
   - Fixes thunks in non-multiarch (9def04c70)

   - X11
    - Fixes variadic packing and callbacks. (82295b294)

   - xcb
    - Fixes typo in version check. (8c53a373b)

  - ThunksDB
   - Adds X11 dependency to XCB (597da8803)

  - X86Tables
   - Fixes CLZero destination address (5d0b2060e)
   - Adds spaceship operator to couple op types (20aaad15e)

  - Misc
   - Fix 16-bit popa insertion behaviour (21eb6e03c)
   - Pack NZCV flags (91bd3aa62)
   - Preserve PF across zero shift (abf5e8c6a)
   - Optimize `xor %eax, %eax` (77c88ffe5)
   - github-actions: Adds timeout to upload results (6baee3b7c)
   - fix spelling errors (22f95e627)

  - unittests
   - Adds missing header (573f33964)

   - gvisor
    - Adds all socket tests to flakes (6f2452e2e)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Sun, 06 Aug 2023 09:39:16 +0000

fex-emu-@ARCH_SUFFIX@ (2307~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes paranoidtso option for CPUs that support LRCPC/2  (e5189d6)
   - Fixes GPR pair allocation to get one pair back (16f7002)
   - Fixes register pair conflict. (7c47296)

  - Context
   - Removes dead `AddVirtualMemoryMapping` function (c3e123d)

  - Emitter
   - Adds support for CSSC  (8047007)

  - External
   - Update jemalloc trees (f872199)

   - jemalloc
    - Updates external jemallocs (1a4d5a1)

  - Externals
   - Update fmt to 10.0.0 (7ee6fc0)

  - FEXServerClient
   - Ensure server socket is created with SOCK_CLOEXEC (e86a792)

  - FHU
   - Workaround libstdc++ version 13+ bug (8a4c5bc)

  - IR
   - Move VPCMPESTRX REX handling to OpcodeDispatcher  (f39163b)
   - Pad IROp_Header to be 32-bit in width (fe06f1b)

  - JIT
   - Implement support for per-instruction RIP reconstruction (9dcc1de)

  - Linux
   - Fixes hangs due to mutexes locked while fork happens. (e72fa02)
   - Handle xattr syscalls with emulated paths. (5a53931)
   - Stop using faccessat2 for faccessat emulation (f444b03)
   - Remove warning that isn't necessary anymore (cac7985)
   - Optimize CalculateHostKernelVersion (1506a19)

  - OpcodeDispatcher
   - Ensure MXCSR is saved/restored with FXSAVE/FXRSTOR (66d4206)
   - Handle XSAVE/XRSTOR (a082161)

  - Scripts
   - Disable using catchsegv if it doesn't exist (d6c9b54)

  - VectorFallbacks
   - Fix PCMPSTR fallback ZF/SF flag setting  (9b5e1c4)

  - Misc
   - Some small fixes for android building (d2032da)
   - Move config layers to the frontend (2997257)

  - unittests
   - Add include search path for asm tests (cb8bf1a)

  - x32

   - Thread
    - Fixes robust futex fetching (e652399)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Fri, 07 Jul 2023 17:05:03 +0000

fex-emu-@ARCH_SUFFIX@ (2306~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AOTIR
   - Stop passing a mutex around. It's already guarded (f47caf4)

  - ARM64
   - Fixes SRA disabled codepath (dc65a5e)

  - CPUID
   - Only enable BMI1 and BMI2 if AVX is supported (cc7a56b)

  - Context
   - Remove debug namespace (5be798e)

  - ELFCodeLoader
   - Fixes missing AT_EXECFN (00dc373)

  - FEXConfig
   - Removes Emulated CPU cores option (1a9b6a8)

  - FEXCore
   - Implements support for xgetbv (737f917)
   - Support Wine syscalls (77e8be1)
   - Convert Core and Telemetry over to fextl::file::File  (5674d3a)
   - Adds support for hardware x86-TSO prctl (ed69eb9)

  - FEXLoader
   - Allow simulated kernel version up to 6.2 (ada226b)

  - FEXRootFSFetcher
   - Support rolling release distros (9473025)

  - IRDumper
   - Fixes ssa number in arguments. (0f4a5ed)

  - InstallFEX
   - Updates helper install script for Ubuntu 23.04 (02f15f4)

  - Linux
   - Make vfork act more similar to how it should. (95b7592)

  - OpcodeDispatcher
   - Optimize ADC/ADD OF flag calculation (5b58082)
   - Optimize EFLAG unpacking (69181d4)
   - Handle PCMPESTRM/VPCMPESTRM (182010c)
   - Handle PCMPISTRM/VPCMPISTRM (e924468)
   - Removes a warning that cropped up. (e03b859)

  - Syscalls
   - Optimize getdents{64,} (de0f398)

  - Telemetry
   - Save on signal terminate (c9d1f0d)

  - Thunks
   - Mostly reverts #2672 (6017a91)
   - Optimize ARM64 trampoline (ce4e991)

  - Tools
   - Removes visual debugger (09997cf)

  - X87
   - Super minor FCMOV optimization (4e01452)

  - Misc
   - Implement support for deferred asynchronous signals (8bc33e9)
   - Wine TestHarnessRunner support (0ad6f98)

  - github
   - Updates some actions to v3 (52f64a0)

  - unittests
   - Adds step to remove stale SHM regions. (0a4bf10)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Fri, 09 Jun 2023 00:15:12 +0000

fex-emu-@ARCH_SUFFIX@ (2305~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARM64Dispatcher
   - Fix compiling with mingw (a33443d)

  - ARM64Emitter
   - Ensure platform register is saved on win32 (73ede9d)

  - ARMEmitter
   - Handle SVE2 integer add/subtract wide category (c9fb9c4)
   - Handle SVE Integer Multiply-Add - Unpredicated group (7747ac8)
   - Fix treating 32-bit elements as 64-bit with ld1w (100b4d4)
   - Finish off SVE2 Integer - Predicated group (719803b)
   - Handle SVE Inc/Dec by Predicate Count category (2293614)
   - Handle SVE Element Count category (7f0cccf)
   - Handle SVE predicate count group (aea9028)
   - Handle floating-point multiply add (indexed) groups (7344680)
   - Handle SVE Floating Point Multiply-Add group (3275dab)
   - Handle SVE floating-point compare with zero group (11d396c)
   - Handle SVE Floating-point Serial Reduction (Predicated) group (cd40a85)
   - Handle SVE Floating Point Unary Operations - Unpredicated group (9b70c1d)
   - Handle LDR (vector) (5e8d960)
   - Move op and assertions into SVEFloatArithmeticPredicated helper (1c3af30)
   - Handle SVE Write FFR group (3b74e34)
   - Move SVEBitwiseShiftbyVector into private section  (054430f)
   - Remove unused helper functions (94e0591)
   - Fully handle SVE Integer Misc - Unpredicated (3bd4b23)
   - Simplify uses of IsXOrWRegister (060745f)

   - ASIMDOps
    - Remove unnecessary template constraints (2321d2a)

   - ScalarOps
    - Move base opcodes into helper functions (4b8ac0f)

  - Allocator
   - Adds VirtualAlloc with memory Base hint function (ba45bf4)
   - Ensure uses of aligned allocations use aligned_free (c140dd7)
   - Remove pointer indirection overhead (1815418)
   - Disable glibc sbrk allocations (e4fadd6)

  - AllocatorHooks
   - Adds some mingw allocator helpers (86e09a0)

  - Arm64
   - Reclaim SRA registers on 32-bit (3a81efd)

   - VectorOps
    - Remove a few unnecessary EORs from comparisons in SVE path (55d65f3)
    - Handle 64-bit elements in VSShr (72df6a2)
    - Remove unnecessary EOR in VAddP/VFAddP SVE path (1f512b0)

  - Arm64Emitter
   - Replace x18 usage with x30 (121d9fd)

  - CI
   - Adds glibc faulting testing (27c03f9)

  - CMake
   - Get past configuration when mingw is used (aba4257)

  - CPUID
   - Disable RDTSCP under wine (f7d827a)
   - Fix std::min type cast (fbc5d58)
   - Enable FAST REP MOVS (6e0a1a5)

  - CPUInfo
   - Add mingw helper for CalculateNumberOfCPUs (1fad26d)
   - Switch away from using get_nprocs_conf (7f243ee)

  - Config
   - Move path generation to the frontend (da12614)

  - Core
   - Add a new log message for unsupported instruction (88dba60)

  - CoreState
   - Fix SynchronousFaultData padding type (68599bf)

  - Dispatcher
   - Disable signal handling under mingw (0fa4390)
   - Fixes restoring of AVX state (28c168e)

  - Docs
   - Adds programming concerns documentation (bfd606e)

  - FEXConfig
   - Fixes misalignment when advanced option is changed.  (4f20dba)

  - FEXCore
   - Moves SIGBUS handler to FEXCore/Utils (86af1f6)
   - Compile without exceptions (37b5bc4)
   - Stop exposing the x86 table data symbols (590422b)
   - Fixup cmake file for mingw (b5420f5)
   - Switch to xbyak for CPUID fetch helpers. (7a774a8)
   - Stop leaking AVX configuration state (5c62ea2)
   - IR_INC dependency on FEXCore_Base (1771d08)
   - Adds fexctl container alias objects (a8ed2af)

  - FEXLoader
   - Don't build with mingw (892c07a)
   - Move to Tools folder (307158d)
   - Move ELFCodeLoader2 to remove 2 (eadce28)

  - FEXServerClient
   - Insert missing padding in message packet (73caa67)

  - FHU

   - FS
    - Create WIN32 helpers for some functions. (af15277)

  - FM
   - Removes double syscall issue with `GetEmulatedFDPath` (b2a3c6a)
   - Remove unused FD to Name mapping (1aeab04)

  - FileLoading
   - Add WIN32 specific loading path (c942687)

  - Frontend
   - Remove errant header (4bffdc6)

  - GdbServer
   - Disable under mingw (f673afc)

  - HostFeatures
   - Mark DCZID related utilities as [[maybe_unused]] (5e105e8)

  - IR

   - Passes
    - Changes vector to fextl (2d05ffe)

  - Interpreter
   - Separate fallback OpHandler from F80 fallbacks (6e52a16)

  - IntrusiveIRList
   - Ensure this is using the FEX allocator (82f7bb2)

  - Ioctl
   - Add default handler for drm (db706bb)
   - Ensure DRM name check uses strncmp (c1dab3e)

  - LogManager
   - Remove unused handler (1e4a6d4)

  - LookupCache
   - Removes unnecessary recursive lock_guard (6dfea8a)

  - Netstream
   - Disable on WIN32 (2ff5096)

  - ObjectCache
   - Ensure correctly packed config option (059472f)

  - OpDispatcher
   - Implements REP MOVS as Memcpy IR op  (11c6f97)

  - OpcodeDispatcher
   - Simplify PCMPXSTRIOpImpl (30974fb)
   - Handle PCMPISTRI/VPCMPISTRI (8824714)
   - Handle VPMASKMOVD/VPMASKMOVQ (238ffdf)
   - Handle VCVTPD2PS/VCVTPS2PD (35f192b)
   - Handle VCVTSD2SS/VCVTSS2SD (512d6d0)
   - Handle PCMPESTRI/VPCMPESTRI (a12802e)
   - Move usages of `And(Not(` to Andn (f55a653)
   - Implement support for 32-bit SALC instruction (df354e3)
   - Handle store variants of VMASKMOVPD/VMASKMOVPS (cf66643)
   - Handle load variants of VMASKMOVPD/VMASKMOVPS (5cdde0b)
   - Handle VMPSADBW (2c2abc5)
   - Handle VPSLLVD/VPSLLVQ (54e7847)
   - Handle VPSRLVD/VPSRLVQ (91f056b)
   - Handle VCVTSI2SD/VCVTSI2SS (41477db)
   - Handle VPINSRB/VPINSRD/VPINSRQ/VPINSRW (8633528)
   - Handle VPSADBW (1087c45)
   - Handle VTESTPD/VTESTPS (6517f7e)
   - Handle VPMADDUBSW (c14f435)
   - Handle VPMOVMSKB (6645e68)
   - Pass full register size through VExtractToGPR (e92cfc4)

  - RA
   - Use FindFirstSetBit helper (cfc1aa5)

  - SignalDelegator
   - Make sure to save and restore `InSyscallInfo` (456e9db)
   - Calculate siginfo layout (886c562)
   - Moves all signal handling to the frontend  (9432a84)
   - Cleanup unused functions (ad332e3)

  - StringConv
   - Convert to conversion functions that don't use std::string (c5da0e7)

  - StringUtils
   - Stop allocating TrimTokens (f45ea1e)

  - Telemetry
   - Disable on WIN32 (cbe55b0)

  - Threads
   - Moves pthread logic to FEXLoader (874ae5b)
   - Adds SetThreadName helper (797737a)
   - Disable glibc allocator fault testing with `exit` (6d4cef7)

  - Thunks
   - Fixes xcb helper thread creation (542aeed)
   - Disable under mingw (4a11111)
   - Enable ccache if available (c03ed52)
   - Make xcb's callback more robust. (e8bf7a1)

  - VEXTables
   - Adds a missing class of AVX instructions (a351620)

  - Misc
   - Win32 memory allocation fixes (468f747)
   - Get mingw compiling libFEXCore (7552ad2)
   - Disable AOT and object cache under mingw (361e684)
   - Disable Break/INT operations on mingw (4c74913)
   - llvm-mingw: Fix SoftFloat compiling (2b5ddb6)
   - Add in jemalloc glibc hooking again  (1a91d84)
   - Update drm headers to v6.2 (1c2fd72)
   - cpp-optparse: Update to latest optparse (7916281)
   - More glibc allocation removals. (f806ca6)
   - Move FEX away from the remaining glibc allocations that we can (aac4e25)
   - Add support for thunking Wayland (21838fe)
   - Convert most std::string over to fextl (9183cf1)
   - Convert most things to fextl (e3f6ef6)

  - fextl
   - :fmt: Remove fwrite usage (d7bc037)
   - Bulk merge (bba8716)

   - memory
    - Don't allow arrays in fextl::make_unique (65fa495)

  - gvisor
   - Disable timerfd test (780491d)

  - mingw
   - Disable compiling Common/Linux/Tools (d7f9c7e)

  - unittests
   - Add missing VPMASKMOVQ store test (e71f3e8)
   - Change alignment directive in 256-bit VPSADBW test to 32 (d1ece88)

   - gcc
    - Disable mcount_pic test (a78860c)

  - x32
   - Fixes clock_nanosleep syscall (1f44037)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Sun, 07 May 2023 12:04:43 +0000

fex-emu-@ARCH_SUFFIX@ (2303~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARMEmitter
   - Tidy up some assertion handling (e7069f9)
   - Remove predicate implicit conversion operators (41731e2)
   - Make second sxtw parameter a WRegister (e71e3ec)
   - Remove implicit conversions from Register/XRegister/WRegister (378e069)
   - Remove predicate uint32_t conversion operators (e869b2f)
   - Remove most implicit conversion operators for vector register types (0f45318)
   - Make VRegister constructor explicit (21fbcef)
   - Handle sequential registers in lists nicer (ef02083)
   - Simplify size handling Advanced SIMD 3 different group (24904f4)
   - Simplify advanced SIMD copy (e65b429)
   - Centralize handling for unsigned offset load-stores (1832cc8)
   - Handle SVE Integer Compare - Scalars group (fe1faf9)
   - Finish off SVE Predicate Misc group (165db37)
   - Handle SVE partition break categories (4d65521)
   - Handle SVE integer compare with wide elements category (0a8fc2c)
   - Finish off SVE Permute Vector - Predicated group (a4c694f)
   - Handle SVE index generation category (e4488b0)
   - Handle a few more vector permutation categories (9c256bf)
   - Handle SVE2 Accumulate category (8c8b680)
   - Finish off SVE Misc category (2bd64ad)
   - Handle CPY (scalar) and CPY (SIMD&FP, scalar) (3c1ba84)
   - Handle predicated wide shifts (dd2e70e)
   - Handle unpredicated wide shifts and unpredicated shifts by immediates (5fd68b6)
   - Handle SVE2 saturating add/subtract category (cb3cfed)
   - Centralize instruction handling for a few categories (582108a)
   - Fixes some warnings that cropped up. (5da90aa)
   - Handle SVE SQDMULH/SQRDMULH (vector) (1089987)
   - Handle ADDVL/ADDPL and RDVL (d810974)
   - Handle MLA/MLS (vector) and MAD/MSB (347abf0)
   - Handle SVE predicated mul/div and finish off integer reduction category (c0bc5d9)

   - ASIMDOps
    - Amend a few error logs (f7f2dc2)

  - Arm64
   - Fixes a race condition on syscall spilling SRA (f6e2fe1)

   - VectorOps
    - Use SVE only with 256-bit op sizes (2f260ae)
    - Use movprfx with VBSL (e8fd8ef)

  - Arm64Emitter
   - Use bit utils wrapper over __builtin_ffs (9e01730)

  - CPUID
   - Adds an config option to hide hypervisor bit (77fad28)

  - Core
   - Support Data in JIT buffer header (c7c47a8)

  - Dispatcher
   - Fixes crash with misalign stack returning from signal (d688026)
   - Support reconstructing RIP from block entry (66d879f)
   - Fixes guest stack register usage (81a89ab)
   - Minor flags optimization (6047ca9)

  - ELFCodeLoader
   - Adds an option to inject libSegFault (a5762b6)

  - Emitter

   - ALUOps
    - Fix typos in log messages (f2aa002)

  - EmulatedFiles
   - Optimize openat handler (545a216)

  - FEXBash
   - Move to Tools folder (ef6f5d2)

  - FEXCore
   - Removes C wrapper interface (f71f244)

  - FEXRootFSFetcher
   - Update link to rootfs links file (308fa76)

  - FEXServer
   - Change systemd service environment variable key (d2e0adf)

  - FEXServerClient
   - Fixes instance where FEXServer can create a zombie (70aefc9)

  - FileManagement
   - Fixes Proton (2fca207)
   - Skip opening emulated writable files (e310e29)
   - Optimize GetEmulatedFDPath with an FD! (55d3edb)

  - IR
   - Add VDupFromGPR (b329442)
   - Allow specifying register size for AES enc/dec ops and PCLMUL (8689038)

  - JIT
   - Adds a JIT data header and tail.  (60b76f5)

  - OpcodeDispatcher
   - Optimize REP STOS to MemSet operation (fc38df2)
   - Restrict partial XMM stores to FPRs in StoreResult_WithOpSize (b39a882)
   - Remove now unused _VDupElement path in LoadSource_WithOpSize (4d25de3)
   - Handle VPHSUBSW (9b23ae9)
   - Share MOVHPD implementation with MOVHPS (f951a40)
   - Handle alignment for MOVAPS a little better (68b2072)
   - Handle VHSUBPD/VHSUBPS (9b12335)
   - Handle register variants of VPERMILPD/VPERMILPS (618f5bb)
   - Handle VPERMD/VPERMPS (645f40b)
   - Handle VPHADDSW (268dedd)
   - Optimize ALUOp handler (65b2da2)
   - Handle VPTEST (a90f536)
   - Use VectorZero over VectorImm in InsertPSOpImpl (ab03e59)
   - Handle VMOVSD/VMOVSS (25f0a03)
   - Handle VPMADDWD (efafe0e)
   - Handle VSHUFPD/VSHUFPS (35746c7)
   - Handle VPSHUFD/VPSHUFHW/VPSHUFLW (3ac7b2c)
   - Handle VPSHUFB (d408129)
   - Handle VPALIGNR (a96ad0f)
   - Handle VEXTRACTF128/VEXTRACTI128 (e6fc159)
   - Handle VPBLENDVB/VBLENDVPD/VBLENDVPS (4ef3066)
   - Handle VBLENDPD/VPBLENDW (e255f1c)

  - Scripts
   - Update fit_native script for X1C/A78C (11c8db5)

  - Syscalls
   - Renamed fstatat64 to fstatat_64 (c4b66b4)

  - VEXTables
   - Remove VPERMIL2PD and VPERMIL2PS entries (5f574fb)

  - VectorOps
   - Remove unnecessary mov in VUShrNI2/VSQXTN2/VSQXTUN2 (b5bc8cd)
   - Only use VBSL 256-bit path if SVE is present (86a6118)

  - Misc
   - Support user supplied signal restorer.  (143ef57)
   - Fix SDL2 directfb includes under Alpine Linux (3bc722c)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 06 Mar 2023 16:54:44 +0000

fex-emu-@ARCH_SUFFIX@ (2302~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARMEmitter
   - Handle integer add/subtract vectors (predicated) instruction class (9d33bba)
   - Handle RMIF, SETF8/SETF16 (a899f9f)
   - Handle SVE floating-point recursive reduction (1cda029)
   - Add a few missing instructions (2c9f99e)
   - Support helper for long address generation  (f8d56a8)
   - Removes some warnings that cropped up (5fd8fdb)

  - Arm64
   - Merge two loads in to an LDP (a28039f)
   - Fixes incorrect operation for CacheLineClear (f8d92aa)
   - Use switch statement for op handlers instead of jump table (565ed45)
   - Fix SpillRegister C&P error (9c93c6f)
   - Fixes large offset spill slots (9acb513)

   - VectorOps
    - Clamp shift amount to esize-1 for VSShr (9a318ca)

  - ArmEmitter
   - Adds two more classes of ASIMD instructions (95e544c)
   - Adds three more classes of ASIMD instructions (81e0ac7)

  - CPUID
   - Optimize initialization (f614fc6)

  - Config
   - Fix relative execve applications. (65971ef)

  - ConstProp
   - Pool inline constants (1e90ebb)

  - Core
   - Adjust virtual memory size for 32-bit (7f6a620)

  - Dispatcher
   - Extract 64-bit signal frame save and restore (65b6b6d)
   - Fixes x86-64 SA_SIGINFO generation  (8dae785)

  - ELFCodeLoader
   - Don't use std::random_device for RNG (f5e97f3)

  - Emitter
   - Remove unused header (90bcb8c)

  - External
   - Update JEMalloc to disable 16k pages (bbf9198)

  - Externals
   - Update jemalloc to 5.3.0 (9322e55)

  - F64
   - Fix integer immediates for add,mul,div,sub (c2325e1)

  - FEXCore
   - Fixup 32-bit signal handling  (fa1193f)

  - FEXLoader
   - Adds support for execveat with AT_EMPTY_PATH  (dcce9ad)
   - Build FEXInterpreter and FEXLoader independently (8974509)

  - FEXRootFSFetcher
   - Support option to auto select first distro (a7aeb4a)

  - FEXServer
   - Remove POLLREMOVE usage (d2d5282)

  - FileLoading
   - Optimize FileLoad (28dd946)

  - Frontend
   - Various optimizations (787b689)

  - Github
   - Add ARM emitter tests to CI (da88c68)

  - IR
   - Removes NumArgs member from IR ops (9403c66)
   - Remove HasDest member (f8e762f)

  - JitSymbols
   - Fixes file opening and writing (a486797)
   - Fixes a crash that can occur (34e1ba6)

  - Linux
   - Fixes shebang file execution (477d4b6)

  - MContext
   - Insert a stack cookie with assertions enabled (7664359)

  - OpDispatcher
   - Adds support for CLWB and CLFLUSHOPT (7be2e1a)
   - Fixes a few missing GPR/XMM helper usages (4aa984a)

  - OpcodeDispatcher
   - Handle VPBLENDD/VBLENDPS (62e6ada)
   - Handle VPSRAVD (fe79f61)

  - Scripts
   - Update InstallFEX.py rootfs links (df87042)

  - Syscalls
   - Fix out-of-bounds read when handling single-line shebang files (3d29dac)

  - Thunks
   - Fixes host symbol overrides (9d35bc0)

  - X86Tables
   - Optimize struct layouts (dfc3297)

  - Misc
   - X87_F64: Fixes FICOM (afaff92)
   - fix ifdef to use HAS_SYSCALL_TGKILL for tgkill as it was intented (8d0329d)
   - fix tgkill (1521e0a)
   - Fix FPREM flags calculation in F64 (632add6)

  - unittests
   - Adds negative integer x87 tests (ee58c5d)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Sat, 04 Feb 2023 01:29:51 +0000

fex-emu-@ARCH_SUFFIX@ (2301~2~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fixes focal

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Wed, 11 Jan 2023 20:07:04 +0000

fex-emu-@ARCH_SUFFIX@ (2301~1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fixes focal

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Wed, 11 Jan 2023 20:04:27 +0000

fex-emu-@ARCH_SUFFIX@ (2301~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARM64
   - Moves RA functions to header (048daa4)

  - Arm64
   - Rename GetSrcPair, GetDst, and GetSrc (bf7d0f7)
   - Enables debug option for disassembling the JIT code (03a0613)
   - Inline Syscall spill optimization (0ebb15c)
   - Optimize SVE register spilling and filling (1ab4471)
   - Optimizing spilling and filling (9a8852f)
   - Reduce dispatcher to 1 page (65e8bf9)

   - VectorOps
    - Simplify FADDP result merging (344ec33)

  - Config
   - Fixes global application configs (dc9737a)

  - Crypto
   - Explicitly clear upper lane with VPCLMULQDQ (4c013c8)

  - Dispatcher
   - Calculate REG_ERR correctly using ARM ESR_EL1  (4f313f5)

  - Frontend
   - Handle 256-bit destination sizes directly (e8aa79b)

  - IR
   - Handle 128-bit VInsElement with SVE (94ae2e3)

  - LookupCache
   - Use a PMR map for our Blocklinks with monotonic allocator (b7358b4)
   - Optimize cache clearing and allocation (2b6a020)

  - OpCodeDispatcher
   - Optimize a case of GOT calculation (b42b4e0)

  - OpcodeDispatcher
   - Handle immediate variants of VPERMILPD/VPERMILPS (3904a52)
   - Handle VMASKMOVDQU (c6297ed)
   - Handle VPHSUBD/VPHSUBW (4786ddc)
   - Zip elements instead of for loop insertion in PHSUB  (58ec2b2)
   - Handle VDPPD/VDPPS (9b8c92e)
   - Handle VINSERTPS (6caf764)
   - Handle VMOVMSKPD/VMOVMSKPS (faa81f2)
   - Handle VPUNPCKHBW/VPUNPCKHWD/VPUNPCKHDQ/VPUNPCKHQDQ (64cd377)
   - Handle VUNPCKHPD/VUNPCKHPS (138f1fc)
   - Handle VPUNPCKLBW/VPUNPCKLWD/VPUNPCKLDQ/VPUNPCKLQDQ (6bc1c3f)
   - Handle VUNPCKLPD/VUNPCKLPS (4560c5b)
   - Handle VCVTSS2SI/VCVTTSS2SI/VCVTSD2SI/VCVTTSD2SI (4a88480)
   - Handle VCVTPD2DQ/VCVTTPD2DQ/VCVTPS2DQ/VCVTTPS2DQ (f379385)
   - Handle VPMULHRSW (82adc2f)
   - Handle VPMULHW/VPMULHUW (4a3af8d)
   - Handle VPHMINPOSUW (9d58514)
   - Handle VPMULDQ/VPMULUDQ (33e8f21)
   - Handle VCMPSD/VCMPSS (cecda7b)
   - Remove lingering debug log from VPFCMPOp (ce35128)
   - Convert runtime assert to static_assert in SHUFOps (345e9b9)
   - Handle VCMPPD/VCMPPS (0c651dd)
   - Handle VPSRLDQ (1668db0)
   - Remove unnecessary usage of VMov in VPSLLDQOp (515b3e4)
   - Handle VCVTDQ2PD/VCVTDQ2PS (4aed60e)
   - Handle VPSLLDQ (60a2fb1)
   - Simplify SHA1MSG1 implementation (d0cb329)
   - Handle immediate variants of VPSRLD/VPSRLQ/VPSRLW (72a3b18)
   - Handle 128-bit AVX AES instructions (1800451)
   - Handle immediate variants of VPSRAD/VPSRAW (1d92182)
   - Handle VPACKUSDW/VPACKUSWB (6e733bf)
   - Handle VPACKSSDW/VPACKSSWB (01d2284)
   - Handle vector versions of VPSRA{D, W} (78b53bf)
   - Handle remaining PEXTRW opcode (fabf453)
   - Handle VPMULL{D, B} (b26e410)
   - Handle vector variants of VPSRL{D, Q, W} (ad3bf18)
   - Handle VPEXTR{B, D, Q, W}/VEXTRACTPS (c86ba76)
   - Handle immediate variants of VPSLL{D, Q, W} (c1e301a)
   - Handle vector variants of VPSLL{D, Q, W} (58fab72)
   - Handle VPHADDW/VPHADDD (8ce6c08)
   - Handle VPMOVSXB{D, W, Q}/VPMOVSXW{D, Q}/VPMOVSXDQ/VPMOVZXB{D, W, Q}/VPMOVZXW{D, Q}/VPMOVZXDQ (dc2eaf6)
   - Narrow memory access with scalar rounding operations (0e233a9)
   - Move template impl to regular function where applicable (4b891d6)
   - Handle VROUNDS{D, S}/VROUNDP{D, S} (1ca3563)
   - Handle VINSERTF128/VINSERTI128 (4b21647)
   - Handle VPERM2F128/VPERM2I128 (f3d0fa6)
   - Handle VPERMQ/VPERMPD (60a4561)
   - Handle VHADDP{D, S} (ded257c)
   - Handle VPMAXS{B, D, W}/VPMAXU{B, D, W} (9de5840)
   - Handle VPMINS{B, D, W}/VPMINU{B, D, W} (40bab6b)
   - Handle VPADDS{B, W}/VPSUBS{B, W} (98a4541)
   - Handle VPADDUS{B, W}/VPSUBUS{B, W} (757602b)
   - Handle VPSUB{B, D, Q, W} (a90067f)
   - Handle VPSIGN{B, D, W} (1bc013d)
   - Handle VDIVP{D, S}/VDIVS{D, S} (a07a533)
   - Handle VMULP{D, S}/VMULS{D, S} (eefcea4)
   - Handle VMAXP{D, S}/VMAXS{D, S}/VMINP{D, S}/VMINS{D, S} (d6b137e)
   - Handle VSUBP{D, S}/ VSUBS{D, S} (db90390)
   - Handle VRCPPS/VRCPSS (2937344)
   - Handle VLDDQU (03fbb92)
   - Handle VPABS{B, D, W} (a57f3a6)
   - Handle VPCMPEQ{B, D, Q, W}/VPCMPGT{B, D, Q, W} (573896d)
   - Handle VRSQRTSS/VRSQRTPS (ab14375)
   - Handle VPBROADCAST{B, D, Q, W}/VBROADCASTI128 (ace90aa)
   - Handle VBROADCASTSD/VBROADCASTSD/VBROADCASTF128 (2123868)
   - Handle VLDMXCSR/VSTMXCSR (b73aeb8)
   - Handle VSQRTPD/VSQRTPS/VSQRTSD/VSQRTSS (d965ae0)
   - Handle VCOMISD/VCOMISS/VUCOMISD/VUCOMISS (7ac21e7)
   - Handle VPAVGB/VPAVGW (a98920d)
   - Explicitly zero upper lanes (e9aa368)
   - Handle VADDSD/VADDSS (5ac44ba)
   - Merge HADDP/PHADD into VectorALUOp (bf86df7)
   - Merge PAVGOp with VectorALUOp (3322f8b)
   - Merge PADDQOp, PSUBQOp, PADDSOp, PSUBSOp with VectorALUOp (9eaa45f)
   - Merge ANDNOp with VectorALUROp (4b16718)
   - Simplify VANDN (2bf7e09)

  - OpcodeHandler
   - Handle VADDSUBP{D, S} (905eb01)

  - ThunkDB
   - Clean up database loading (12b866c)

  - Thunks
   - Fix IDE integration (16969fc)

  - ThunksDB
   - Fix misspelt guest library names (e486833)

  - X86Tables
   - Restrict CVTDQ2PD and CVTTSD2SI to 64-bit memory accesses (91c00d2)

  - Misc
   - Create a new ARM64 Emitter and move JIT over to it. (ec55ecd)
   - Initial 32-bit host thunk feature support (d5f3a09)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Fri, 06 Jan 2023 15:58:39 +0000

fex-emu-@ARCH_SUFFIX@ (2212~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Const on unmodified argument (9ca34ca)
   - Minor optimization in AESKEYGENASSIST (c1d118c)
   - Optimize Break IR op codegen (c7dd6ff)

   - VectorOps
    - Simplify VMov IR op on SVE  (70e6ab5)

  - CMake
   - Fix typo in clang thunks option. (0030971)

  - Config
   - Disable multiblock by default (df25d4e)
   - Add support for steamid based configurations. (02ca94e)

  - Core
   - Replace a couple maps with tsl robin_map (57c5761)
   - Removes log about migrating to shared memory mode (8b6e9e0)

  - ELFCodeLoader
   - Calculate AT_MINSIGSTKSZ (e0fe916)
   - Fixes AT_PLATFORM null terminator (d7b0e84)
   - Pass through AT_SECURE (8afc3b8)
   - Ensure we set AT_SYSINFO for 32-bit (1d32df9)

  - EmulatedFiles
   - Defer cpuinfo file initialization to first access (8e2b0d1)

  - Externals
   - Update vixl submodule (f066abc)

  - FEXConfig
   - Sort named rootfs vector (71f658b)

  - FEXLoader
   - Make `IsInterpreterInstalled` check less horrible. (1dd5642)
   - Disables some AOT shutdown overhead when not enabled (f8b2a0b)

  - FEXServer
   - More Systemd fixes (5e5e5a3)

  - FEXServerClient
   - Disable confusing connection log (cc6306a)
   - Add some debug logs for when FEX can't connect to se… (3c8da3e)

  - IR
   - Handle 256-bit VExtr (5a403b7)
   - Removes the only uses of VSLI and VSRI (7d9ed4e)
   - Remove VLoadMemElement and VStoreMemElement (9cee012)
   - Handle 256-bit LoadRegister/StoreRegister (a9c5138)
   - Handle 256-bit VAddV (04d4c5e)

  - IntrusiveIRList
   - Add a utility helper for getting an OrderedNodeWrapper (3c88180)

  - IoctlEmu
   - Support radeon (fc28062)

  - Linux
   - Improve performance of hot paths in path searching (66e0d46)

  - OpcodeDispatcher
   - Handle VADDPD/VADDPS/VPADDB/VPADDW/VPADDD/VPADDQ (8f157e4)
   - Handle VANDPD/VANDPS/VPAND/VANDNPD/VANDNPS/VPANDN (c37fcf1)
   - Handle VORPD/VORPS/VPOR (34e39c9)
   - Handle VPXOR/VXORPD/VXORPS (4de6902)
   - Handle VZEROUPPER/VZEROALL (a374a9a)
   - Handle VMOVQ (b35c6c6)
   - Handle VMOVNTDQ/VMOVNTDQA/VMOVNTPD/VMOVNTPS (0841ff5)
   - Implement SGDT  (9912d41)
   - Moves all GPR and XMM accesses to direct register accesses (a4556e9)
   - Handle VMOVDQA/VMOVDQU (df761a9)
   - Handle VMOVDDUP (f8a199a)
   - Handle VMOVSHDUP/VMOVSLDUP (58f35ba)
   - Handle VMOVHPD/VMOVHPS (bc20f1e)
   - Handle VMOVLPD/VMOVLPS (69045db)
   - Handle VMOVAPD/VMOVUPD/VMOVUPS (2271a90)
   - Handle VMOVAPS (56ff09f)
   - Disable PCLMUL if not supported on host (c8293cb)

  - Syscalls
   - Minor optimization with initialization of syscall definition vector (4d2c4b4)

  - Thunks
   - Fix guest targets not being detected by IDEs (9158877)

  - Misc
   - x86_64/VectorOps: Separate 128-bit/256-bit paths (181d315)
   - Systemd fixes (d5f7e61)
   - InstallFEX.py: Adds support for Kinetic (aa837ed)
   - Update release process to include AUR (5336f01)

  - unittests
   - Expand VPCLMULQDQ unit test (9fea774)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 05 Dec 2022 22:09:11 +0000

fex-emu-@ARCH_SUFFIX@ (2211~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - 32bit
   - Fixes Debug build of VDSO (cf91ab9)

  - Allocator
   - Expand stack space when stealing virtual address space (000677a)

  - Arm64

   - BranchOps
    - Remove unused std::vector (74e18f4)

   - ConversionOps
    - Eliminate use of temporary in Vector_FToF (b1d98f4)

   - MemoryOps
    - Merge if statement into switch in ParanoidLoadMemTSO (199649b)
    - Remove lingering unnecessary ptrue instances (40d820f)

   - VectorOps
    - Make use of MOVPRFX where applicable (639d6e6)
    - Simplify SVE VSXTL/VSXTL2/VUXTL/VUXTL2 implementations (136f1e2)

  - ELFCodeLoader
   - Fixes Proton Experimental on 48-bit VA systems (2fa1a64)
   - Implement four more auxv values (fa5322d)

  - External
   - Update vixl submodule (fc6de5f)

  - FEXCore
   - Adds support for a timeline profiler interface (62a24bd)

  - FEXServer
   - Be robust against invalid packets. (64eb87e)

  - Flags
   - Refine _Bfe's shift (abb44d3)

  - IR
   - Handle 256-bit VInsElement (9e7daf6)
   - Handle 256-bit LoadContextIndexed/StoreContextIndexed (03f0edc)
   - Handle 256-bit StoreMem/StoreMemTSO/ParanoidStoreMemTSO (70a91ee)
   - Handle 256-bit LoadMem/LoadMemTSO/ParanoidLoadMemTSO (8a14f87)
   - Handle 256-bit LoadContext/StoreContext (d475b0b)
   - Handle 256-bit VTBL1 (2332c41)
   - Handle 256-bit VInsGPR (b7d9c00)
   - Handle 256-bit VExtractToGPR (b3ee5db)
   - Handle 256-bit Vector_FToI (7e81023)
   - Check for invalid conversion masks in Float_FromGPR_S (7291b10)
   - Handle 256-bit Vector_FtoF (b8f7e4c)
   - Handle 256-bit Vector_FToZS/Vector_FToS  (13003da)
   - Handle 256-bit Vector_SToF (cb17ee9)
   - Handle 256-bit VDupElement (27b022d)
   - Handle 256-bit VUnZip/VUnZip2 (780e3c7)
   - Handle 256-bit VZip/VZip2 (ab45db1)
   - Handle 256-bit VUShrNI/VUShrNI2 (bb38bcb)
   - Handle 256-bit VSQXTUN/VSQXTUN2 (6cc2912)
   - Handle 256-bit VSQXTN/VSQXTN2 (1c7d416)
   - Handle 256-bit VSMull/VSMull2 (3ac5e04)
   - Handle 256-bit VUMull/VUMull2 (78a0773)
   - Handle 256-bit VUXTL/VUXTL2 (e9f3a5b)
   - Handle 256-bit VUABDL (ebc45df)
   - Handle 256-bit VSXTL/VSXTL2 (f14a5ff)

  - Interpreter

   - MiscOps
    - Remove unused StopThread() function (d2e0dc9)

  - OpcodeDispatcher
   - Fixes ROR imm OF calculation (eca9353)
   - Fixes flag calculation on ROR and ROL by immediate (b1e475d)
   - Fixes FPREM1 C2 flag calculation (4a09a43)

  - Syscalls
   - Fixes 64-bit mmap and munmap (d1b235d)

  - Thunks
   - Add support for disabling thunks in config (004c323)
   - Fixes missing thunk librarie so versions (2272b30)
   - Fixes indirect thunks with 8+ arguments (6b3d888)
   - Update Vulkan thunk to v1.3.231  (ddc1027)

   - Guest
    - Enable SSE2 on thunks and set fpmath to sse (671f3e7)

   - X11
    - Reorder and sort X11 interface by headers included.  (8d373c1)

   - libX11
    - Fix recursive initialize (d838612)

  - ThunksDB
   - Fixes Thunks loaded boolean pointer check (b5fb1cb)

  - Utils

   - 64BitAllocator
    - Minor cleanups and optimization for munmap  (70a3ceb)

  - X87
   - Claim incoming float was in the range for trancendental ops (aa5e92b)

  - Misc
   - Segment register index optimization (ecf4891)
   - Implements DAA, DAS, AAA, AAS, AAM and AAD instruction (f26eccd)
   - Ensure Arm64Emitter uses FEX allocator (ffb4de9)

  - unittests
   - Amend mm register usage in H0F38/66_04.asm test (cada0d5)

   - asm
    - Adds more extensive FPREM/FPREM1 tests  (b726f60)

   - gvisor
    - Adds a bunch of tests to flakes (5bef13d)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 03 Nov 2022 06:29:06 +0000

fex-emu-@ARCH_SUFFIX@ (2210~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes SVE VectorImm (ad8526852)
   - Centralize location for register defines (169cfbbee)

   - VectorOps
    - Make use of static predicate registers (0fee355ff)

  - CI
   - Fixes struct verifier on Ubuntu 20.04 (f97a4afd8)
   - Adds support for flakes (96fecfd7c)

  - CMake
   - Add toolchain file for 32-bit cross-compiler (1ed3ecb40)
   - Extend AArch64 check to include arm64 (a583ebe59)

  - Docs
   - Update Release docs (c987e1ef4)

  - ELFCodeLoader
   - Map primary ELF more like the kernel  (b44b3401b)
   - Fixes dynamic non-interpreter ELFs (edca52860)
   - Map interpreter first (71f7ff510)

  - ELFCodeloader
   - Map once and then use MAP_FIXED to overwrite (d68b84bc2)

  - FEXConfig
   - Ensure APP_CONFIG_NAME isn't stored in json (8d69f539a)

  - FEXLinuxTests
   - Adds missing pthread_cancel flake status (c262362a0)
   - Migrate to Catch2 (8f70137b1)
   - Build 32-bit and 64-bit test variants separately (3448c8343)
   - Use the build system instead of setting up compile flags via source-code annotations (d2138694b)

  - FEXServer
   - Fix waiting on kernel version older than 5.3 (8f9d79934)

  - FHU
   - Convert to a interface target (dee85f14f)

  - IR
   - Handle 256-bit VSMul/VUMul (23dd056b6)
   - Handle 256-bit VRev64 (c412d073b)
   - Handle 256-bit VShlI/VUShlI/VUShrI  (c2b6aef6f)
   - Handle 256-bit VSShrS/VUShlS/VUShrS (51214d1be)
   - Handle 256-bit VFCMPORD/VFCMPUNO (7b4b9a80f)
   - Handle 256-bit VFCMPLT/VFCMPGT/VFCMPLE (25a8a0077)
   - Handle 256-bit VFCMPEQ/VFCMPNEQ (a67f7422b)
   - Handle 256-bit VCMPGT/VCMPGTZ/VCMPLTZ (ed8150cfb)
   - Handle 256-bit VCMPEQ/VCMPEQZ (462a163ba)
   - Handle 256-bit VBSL (6374175a6)
   - Handle 256-bit VSMax/VUMax (8d8b02928)
   - Handle 256-bit VSMin/VUMin (aa6a49932)
   - Handle 256-bit VNot (64c4fdccf)
   - Handle 256-bit VFNeg (d715ffbc8)
   - Handle 256-bit VNeg (1799d4c67)
   - Handle 256-bit VFRSqrt (dacd96cab)
   - Handle 256-bit VFSqrt (ca4d3bf64)
   - Handle 256-bit VFRecp (ea38b043c)
   - Handle 256-bit VFMax (a39746df2)
   - Handle 256-bit VFMin (2367a8e50)
   - Handle 256-bit VAddP (cb121d7f1)
   - Handle 256-bit VFDiv (50eba4066)
   - Handle 256-bit VFMul (447226576)
   - Handle 256-bit VFSub (3f8b872f1)
   - Handle 256-bit VFAddP (e573ddc2d)
   - Handle 256-bit VFAdd (eedbde6f1)
   - Handle 256-bit VPopcount (4e441e5a0)
   - Handle 256-bit VAbs (3e287a36c)
   - Removes Mov IR op (46bde401b)
   - Removes VExtractElement (01beac495)
   - Removes unnecessary VBitcast IR op (fcd981e6b)
   - Removes SplatVector{2,4} (2b9cc9666)
   - Removes VInsScalarElement (82eba2229)

  - Interpreter
   - Handle 256-bit VSShr/VUShl/VUShr (4d6e15d7a)
   - Use constant for AVX register size where applicable (808e1c033)
   - Handle 256-bit VMov (412793c21)
   - Handle 256-bit VAnd/VBic/VOr/VXor (b5cb42924)

  - JITs
   - Handle spilling/filling 256-bit vectors (6742e0c37)
   - Expand max spill slot size to 32 bytes (0d0d116bd)

  - SMC
   - Fix possible deadlock (8da9ebc2e)

  - Scripts
   - Updates DefinitionExtract (3977e1f29)

  - StructVerifier
   - Fixes CI failure (d4b5bf0f7)

  - ThunkLibs
   - X11/Xext: Removes two functions that don't exist on 32-bit (cc4c705fc)

  - Thunks
   - Add support for building with clang (2b1ef9735)
   - Adds dependency on linker script (eaddf7f1a)
   - Implement the Thunk IR op for 32-bit mode (1ea00f68a)
   - Adds functional thunk testing to CI (a59097763)

   - Host
    - Adds bool operator to fex_guest_function_ptr (3237de308)

   - gen
    - Use fmt for writing formatted output (704afed97)

   - libvulkan
    - Fixes print for 32-bit (d8c2a8271)

  - VDSO
   - Fix vsyscall (5cf59408a)

  - VectorOps
   - Handle 256-bit VURAvg (977d6dd24)
   - Handle 256-bit VUMinV (0261ed353)
   - Extend VSQAdd/VSQSub/VUQAdd/VUQSub (f34f1309a)
   - Extend VAdd/VSub (0ad52b7d1)

  - Misc
   - Add opencl thunk db (b693112c8)
   - 32-bit VDSO support (6f6f3c9dc)
   - Update vixl external (832a320e2)
   - Move thunk generator logic from ASTVisitor to ASTFrontendAction (54915f87c)
   - Add support for the vixl simulator (b36ec152d)

  - cmake
   - Adds uninstall target (6adf22761)

  - unittests
   - Disable gvisor pselect test (acddc0323)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 13 Oct 2022 07:51:12 +0000

fex-emu-@ARCH_SUFFIX@ (2209~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - 64BitAllocator
   - Fixes a significant state tracking perf problem (123b672)

  - Allocator
   - Simplify StealMemory, make it less chatty with kernel space (04678f8)

  - Arm64

   - JIT
    - Rename CanUseSVE to HostSupportsSVE (7d8950d)

  - CI
   - Build Thunks (e544591)

  - FDUtils
   - Don't make unknown get_fdpath fatal (336dedb)

  - FEXRootFSFetcher
   - Fix crash if curl fails to download rootfs definition file (31fefaa)

  - FEXServer
   - Support socket path override (a2f4f49)

  - Github
   - Fix fresh runner rootfs checkout (d619968)

  - HostRunner
   - Handle upper YMM lanes in sigsegv handler (d5c83a2)

  - IRLoader

   - TestHarnessLoader
    - Don't build if not building tests (097184c)

  - InterpreterOps
   - Extend SSAData size to accomodate 256-bit operations (98dbfbe)

  - Linux
   - Emulate classic getdents syscall for x64 and x32 (9de25c2)

  - Syscalls
   - Use underscored shm syscall names  (bbcca80)

  - Termux
   - Add android-shmem library (0adbe31)

  - Thunks
   - Consolidate all generated code to one file per library per platform (c17da25)
   - Adds VDSO thunk library  (53623ff)
   - Minor cleanups for signature-based function pointer thunking (e6acdcc)
   - Support direct thunk config in configuration files  (84a95ad)
   - Fix compile without jemalloc (d5138f5)

   - X11
    - Support Variadic stack packing (fbb008e)
    - Adds missing XLibint functions (998a3d8)

  - VectorOps
   - Extend VAnd/VBic/VOr/VXor (e776f4c)
   - Extend VMov (e7d7dd1)
   - Extend VectorImm (8439cf4)
   - Extend VectorZero (d03b6a9)

  - Misc
   - New domain. (7f9edbf)
   - x86_64/JIT: Resolve lingering fmt deprecation warning (37ccb13)

  - cmake
   - fix incorrect assumption about the value of git's core.abbrev (c03a7fd)

  - unittests
   - Support skipping unit tests based on host feature support (1fe6fc3)

   - ThunkLibs
    - Fix warning about "dangerous" use of tmpnam (12fee91)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 05 Sep 2022 17:38:02 +0000

fex-emu-@ARCH_SUFFIX@ (2208~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AppConfig
   - Fix bug with filename (ac23bce)

  - Arm64

   - JIT
    - Remove unnecessary [[maybe_unused]] attributes (89aa590)

  - Arm64Dispatcher
   - Amend memcpy in SpillSRA  (f5e18cc)

  - Arm64Emitter
   - Re-add use of stp/ldp with hosts that don't support SVE2 (8589119)

  - CMake
   - Support multiple json files in the root of Data/ (bd296d7)

  - CPUID
   - Detect Cortex-X1C (c9f0ecb)

  - Config
   - Support a global configuration file (3a64ea1)

  - Dispatcher
   - Fix SRA enabled check in signal delegator handlers (0dfe617)

  - Externals
   - Update fmt to 9.0.0 (54f62b6)

  - FEXBash
   - Changes PS1 to hopefully help users (a72ebfd)

  - FEXConfig
   - Some quality of life improvements (164299c)

  - FEXCore
   - Fix-up edge case behaviour on faulting instructions  (8037231)
   - Adds assume optimizing LogManager function  (3d347ed)
   - Support synchronizing RIP on block entry through config (80909ea)

  - FEXRootFSFetcher
   - Adds runtime checks for image mounting tools (cfd59db)
   - Actually wire up -a -x (3aabe07)
   - Add some options for automation without user intervention (f6fcfba)

  - FEXServer
   - Fix unsafe vector insert/removal (0982ec6)

  - HarnessHelpers
   - Handle SSE register offsets in CompareStates (0e93ba5)

  - Interpreter
   - Move argument names over to IR names (3f9a1c3)

  - JitSymbols
   - Only initialize perf map file if using (a984674)

  - Linux
   - Fixes hang in close_range  (4dfe0a0)
   - Only install syscall handlers for the arch we launched with (0186616)

  - Syscalls
   - Removes staging vector usage (6903159)

  - Telemetry
   - Support executable names through wineserver (ce0c24e)

  - Thunks
   - Extends libGL interface to support more functions (1051cd9)
   - Make glXGetProcAddress self-query work  (dd7e1ba)
   - Make unknown glXGetProcAddress non-fatal (ab228c1)
   - Use external Vulkan-Headers  (9664d98)
   - Make GL guest thunks implicitly load libX11.so (5eab087)

   - X11
    - Distinguish between host and guest pointers in XFree (6933c2a)

  - Misc
   - Disable UnitTestGenerator (45330fd)
   - Synchronized Block Linking (b9c9c7d)
   - Implement signature-based thunking of function pointers (62d9961)
   - Cleanup syscalls headers (c3c52d0)
   - json_ir_generator: Remove Args() functions from IR structs (98d935d)
   - Fix SOMA and sigaction definition (b07660c)
   - improve compile ability for older linux (c1688fa)
   - AVX initial groundwork (c173405)
   - x86_64: Migrate args over to named IR arguments (3ac6ba0)

  - cmake
   - Remove the static-pie compilation option (a112db1)

  - drm
   - Update to v5.19 (1fa6bf1)

  - unittests
   - Adds 32-bit into test  (f2602e3)

  - vixl
   - Update (9b685ba)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Wed, 10 Aug 2022 15:23:53 +0000

fex-emu-@ARCH_SUFFIX@ (2207~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AOTIR
   - Fix IRList delete (fb41ba1)
   - Fix RAData free (9242e59)

  - Arm64

   - EncryptionOps
    - Fix register specifiers in PCLMUL movs (63b70ff)

   - JIT
    - Use IR names in opcode implementations (19b0a9c)

  - Backends
   - Unified dispatch, interface rework, cleanups (072690a)

  - CI
   - Auto rootfs fetching (c027ace)

  - CMAKE
   - Create directories during configuration, fixes endless generation of unittests (e62bc24)

  - CMake
   - Check for binfmt_misc conflicts before install (6d2f98a)

  - CPUID
   - Enable the hypervisor bit (da8dbf1)

  - Common
   - Support application profiles for games launched through wine (3913dd6)

  - Config
   - Fixes AppConfig for wine-preloader (ae6a57e)

  - Context
   - Fix CreateThread partial initialization issue (eac579f)
   - Decouple from CodeLoader, introduce generic CustomIREntrypoints (b0a31f7)

  - CoreState
   - Add register size constants (1c1ad87)

  - Dispatcher

   - Arm64
    - Fix vixl assert (0f696c6)

  - Dispatchers
   - Use thread local emitters for backend callbacks (4f9bc70)

  - FDUtils
   - Fix get_fdpath (aa17f64)

  - FEXGDBReader
   - Fix install path (b3e090c)

  - FEXRootFSFetcher
   - Update and fix xxhash file hashing (c0a8984)

  - FEXServer
   - Stop leaking FDs to subprocesses (b7806e4)
   - Minor changes (1f1d070)
   - Adds -w option for waiting on current FEXServer (b020e59)
   - Adds new FEXServer service (5a19425)

  - FEXServerClient
   - When running under pressure-vessel don't use FEXServer rootfs (9110546)

  - IPR
   - Store copy of IRLists, Dispatcher cleanups (790bd97)

  - IR
   - Remove GuestCallDirect, GuestCallIndirect (e4d659a)
   - add IsFragmentExit, IsBlockExit (2d3c6ef)

  - Invalidations
   - Move invalidation locks to Context (ffcde18)

  - Ioctl
   - Safely access v3d csd ioctl structure (158ba1a)

  - Ioctl32
   - Fix DRM_IOCTL_WAIT_VBLANK (982518d)

  - JITs
   - Qualify external includes consistently (b05e5ce)

  - Linux
   - Fixes for clone3 stack size (1494aac)
   - Make `get_fdpath` more optimal (542ab04)
   - Fixes 32-bit allocator range scanning (4c73c71)
   - Fixes `open` syscall emulated path handling (4323493)

  - OpcodeDispatcher
   - Handle CLMUL opcode extension (9e9ceb3)

  - SMC
   - Track code pages before frontend decode (bbd9eb5)

  - Scripts
   - Allow user override on tagged version (aafe7ff)

  - TSO
   - Add auto migration optimisation for applications that don't need TSO (c99d1e4)

  - Tests

   - IRLoader
    - Silence missing override warning (ade3a52)

  - ThunkLibs
   - Fix Guest.h (302a6c9)
   - silence warnings (30a28ff)

   - vulkan
    - Work around lack of generic callback support in VK_EXT_debug_report (4771a34)

  - Thunks
   - Implement generic callback support (aec5b21)
   - Soften error condition to be non-fatal (3b8491b)
   - Adds libvulkan steam pinned library thunking support (6b226dd)
   - Fix std::set crash (6a43db8)
   - Add fex:is_lib_loaded (88b94be)
   - Support returning host function pointers to the guest (04a1ac9)
   - Support pressure-vessel prefixes (e2e6f2a)

   - vulkan
    - Disable debug report callback (751b66d)

  - ThunksDB
   - Fix String.find error check (d8fa53a)

  - ValueDominanceValidation
   - Avoid stack exhaustion when aggregating predecessors (124097d)

  - Vulkan
   - Handle queries for unknown functions more gracefully (e137c2e)

  - Misc
   - Support EroFS (46fcbe2)
   - Allow building thunks on a wider range of platforms (ad6fd5a)
   - Fix inconsistent allocation schemes used for RegisterAllocationData (8a21eca)
   - Make Dispatcher per Context from per Thread, Simplify TestHarnessRunner (0a62a4c)
   - IR.json: Correct 'Dest' key to 'Desc' (51c5f94)

  - gdb
   - jit integration (4449b60)

  - unittests
   - Classify CPU based on CPU features (d005fdc)
   - Disable known flake in posix tests (a97fb2f)
   - Add FEXLinuxTests with a few tests (cb0935c)

   - ThunkLibs
    - Fix test failures due to missing FEX_PACKFN_LINKAGE define (a2c9d5a)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Thu, 07 Jul 2022 17:14:03 +0000

fex-emu-@ARCH_SUFFIX@ (2206~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AOTIR
   - copy RAData and IRList, make sure data is accessible (da2e44d)

  - AppConfig
   - Inject --no-sandbox in to steamwebhelper (c14c0c2)

  - ArchHelpers
   - Adds relocation struct defines (b5ae9e4)

  - Arm64
   - Fix LDAPUR/STLUR DMB backpatch (27f2e0b)
   - Adds support for RCPC2 extension (f8ba373)
   - Fixes AtomicSwap (70988cc)

  - Arm64Emitter
   - Optimize constants with ADRP and ADR (912dbfe)

  - CMake
   - C/C++ flags for defined singed overflow warping (2e05349)
   - Add option to use the mold linker (5884114)

  - CompileService
   - Removes no longer necessary service thread  (b1033ed)

  - Config
   - Adds code cache config option (278ca52)

  - Core
   - Adds Code Object Cache service  (13f3c6e)
   - context-wide guest code invalidations (d810988)

  - EmulatedFiles
   - Fixes temporary file flags (4fbc266)

  - F64
   - Implement FCW using host rounding mode (db3854e)
   - Fix FILD and FIST for Size < 8 (89d6752)

  - FEXBash
   - Set PS1 to make it more obvious when running under FEX (ec38d58)

  - FEXCore
   - Adds refcount_shared_mutex class (1e597bf)
   - Reclaimable thread pool allocator (8a7f395)

  - FEXLoader
   - Fix create_directories check for aotir .path file writting (90f338d)

  - FEXLogServer
   - Stop improper use of std::erase_if (d523b7a)

  - FEXRootFSFetcher
   - Don't continue download (fa87c73)

  - JitSymbols
   - Print file+offset if possible (a715627)

  - Linux
   - Fixes 32-bit mmap (3fd136b)

   - MemAllocator32Bit
    - Add missing lock to shmdt, fix error returns (b2b4c2b)

  - OpcodeDispatcher
   - Implement SHA256 instructions (3bbff8a)
   - Handle SHA-1 instructions (8dd9a5b)
   - Implements support for PAUSE  (da48020)
   - Fixes pextrb with high registers (fe11bd2)
   - Remove debugging dump statement (c8dc663)
   - Adds support for non-temporal loadstores (ba78dff)

  - ScopedSignalMask
   - Add shared mutex support, move constructors (8e36f53)

  - Syscalls
   - Fixes clone3 stack pointer (0ed9654)

   - Linux
    - Add guest[Mmap/Munmap] (b9d878b)
    - Refactor guest mman tracking (ce0f5db)

  - TestHarnessRunner
   - Use guest mapper for test harness files (b78af2f)

  - X86Tables
   - Leave shouldn't end block (4f42632)

  - Misc
   - Struct verifier fixes and reenable (c6153d6)
   - v5.18 support (969d8f8)
   - Fix dangling curl hyphen (1dee54a)
   - SMC detection via segfaults (5460a24)
   - Standarized TODO markers: FEX_TODO, FEX_TODO_ISSUE (73d43c1)
   - Clean up and document ScopedSignalMask (5379f0a)
   - Object cache named region no-op implementation (ee2d417)
   - JIT relocation handling support (c5dacab)
   - 32-bit FSGS instruction fixes. (9bc631a)
   - V5.17 support (2f7dcb8)
   - Emulate reduced-precision X87 with 64-bit host FPU ops (42a6320)

  - mtrack
   - Fixes 32-bit shmat, shmdt tracking, guaranteed invalidation atomicity (d82d294)

  - unittests
   - Reenable atomic tests on ARMv8.0 (0fc6d6b)
   - Investigate failing CI changes (7227ee9)
   - Workaround runner issues (ce5297b)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sat, 04 Jun 2022 20:05:54 +0000

fex-emu-@ARCH_SUFFIX@ (2204~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - CPUID
   - Adds 4000_0001h function (977bda97)

  - Documentation
   - Adds hypervisor CPUID information (1f1c2149)

  - FEXCore
   - Delete IR after it is used (a247df50)
   - Fixes #1618 (60c7ea6e)
   - Removes unused debug data (8422fc63)

  - FileManager
   - Fix realpath failed on debian buster (91665fdf)

  - JIT
   - Adds comment to EmitDetectionString (d39df8d3)

  - JITArm64
   - Get long divide out of the hot path (8ad14728)

  - JITs
   - Emit identification string in the code buffers (23a1c64b)

  - Linux
   - Fixes MAP_32BIT supported range (fad91bb8)

  - OpcodeDispatcher
   - Fixes SIGILL on unsupported host instructions (042cd354)
   - Fixes FNINIT (187c6418)

  - Scripts
   - Updates AArch64 fit for Clang 14 (6b3cd3d3)

  - SignalDelegator
   - Adds missing include (b43937a7)

  - Softfloat
   - Fixes FSCALE (56779245)

  - TestHarnessRunner
   - Flush log on asserts (ebd0edba)

  - Misc
   - GDBServer improvements: Three's a crowd (7b0265ff)
   - Gdbstub improvements: The sequel (6a5abd36)
   - GDBServer improvements (53ffe5df)
   - Adds a cmake option for forcing a termux build (5de6c866)
   - Change page define usages over to self-defined (f5f9512d)
   - Disables GUI applications in a Termux build (fb27cb43)
   - Update ReleaseProcess docs for Termux (94664580)

  - docs
   - Remove stale text (5cc0c0a3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Tue, 19 Apr 2022 08:43:38 +0000

fex-emu-@ARCH_SUFFIX@ (2203~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sun, 06 Mar 2022 12:52:29 +0000

fex-emu-@ARCH_SUFFIX@ (2202~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sun, 06 Feb 2022 06:51:45 +0000

fex-emu-@ARCH_SUFFIX@ (2201~8~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Tue, 04 Jan 2022 03:13:28 +0000

fex-emu-@ARCH_SUFFIX@ (2201~7~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fix package triggers

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 23:38:20 +0000

fex-emu-@ARCH_SUFFIX@ (2201~6~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Adds binfmt_misc triggers on FEXLoader/FEXInterpreter change
  Adds missing binfmt postinst files

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 22:35:55 +0000

fex-emu-@ARCH_SUFFIX@ (2201~5~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fix fortify crashes

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 04:07:04 +0000


