fex-emu-@ARCH_SUFFIX@ (2302~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARMEmitter
   - Handle integer add/subtract vectors (predicated) instruction class (9d33bba)
   - Handle RMIF, SETF8/SETF16 (a899f9f)
   - Handle SVE floating-point recursive reduction (1cda029)
   - Add a few missing instructions (2c9f99e)
   - Support helper for long address generation  (f8d56a8)
   - Removes some warnings that cropped up (5fd8fdb)

  - Arm64
   - Merge two loads in to an LDP (a28039f)
   - Fixes incorrect operation for CacheLineClear (f8d92aa)
   - Use switch statement for op handlers instead of jump table (565ed45)
   - Fix SpillRegister C&P error (9c93c6f)
   - Fixes large offset spill slots (9acb513)

   - VectorOps
    - Clamp shift amount to esize-1 for VSShr (9a318ca)

  - ArmEmitter
   - Adds two more classes of ASIMD instructions (95e544c)
   - Adds three more classes of ASIMD instructions (81e0ac7)

  - CPUID
   - Optimize initialization (f614fc6)

  - Config
   - Fix relative execve applications. (65971ef)

  - ConstProp
   - Pool inline constants (1e90ebb)

  - Core
   - Adjust virtual memory size for 32-bit (7f6a620)

  - Dispatcher
   - Extract 64-bit signal frame save and restore (65b6b6d)
   - Fixes x86-64 SA_SIGINFO generation  (8dae785)

  - ELFCodeLoader
   - Don't use std::random_device for RNG (f5e97f3)

  - Emitter
   - Remove unused header (90bcb8c)

  - External
   - Update JEMalloc to disable 16k pages (bbf9198)

  - Externals
   - Update jemalloc to 5.3.0 (9322e55)

  - F64
   - Fix integer immediates for add,mul,div,sub (c2325e1)

  - FEXCore
   - Fixup 32-bit signal handling  (fa1193f)

  - FEXLoader
   - Adds support for execveat with AT_EMPTY_PATH  (dcce9ad)
   - Build FEXInterpreter and FEXLoader independently (8974509)

  - FEXRootFSFetcher
   - Support option to auto select first distro (a7aeb4a)

  - FEXServer
   - Remove POLLREMOVE usage (d2d5282)

  - FileLoading
   - Optimize FileLoad (28dd946)

  - Frontend
   - Various optimizations (787b689)

  - Github
   - Add ARM emitter tests to CI (da88c68)

  - IR
   - Removes NumArgs member from IR ops (9403c66)
   - Remove HasDest member (f8e762f)

  - JitSymbols
   - Fixes file opening and writing (a486797)
   - Fixes a crash that can occur (34e1ba6)

  - Linux
   - Fixes shebang file execution (477d4b6)

  - MContext
   - Insert a stack cookie with assertions enabled (7664359)

  - OpDispatcher
   - Adds support for CLWB and CLFLUSHOPT (7be2e1a)
   - Fixes a few missing GPR/XMM helper usages (4aa984a)

  - OpcodeDispatcher
   - Handle VPBLENDD/VBLENDPS (62e6ada)
   - Handle VPSRAVD (fe79f61)

  - Scripts
   - Update InstallFEX.py rootfs links (df87042)

  - Syscalls
   - Fix out-of-bounds read when handling single-line shebang files (3d29dac)

  - Thunks
   - Fixes host symbol overrides (9d35bc0)

  - X86Tables
   - Optimize struct layouts (dfc3297)

  - Misc
   - X87_F64: Fixes FICOM (afaff92)
   - fix ifdef to use HAS_SYSCALL_TGKILL for tgkill as it was intented (8d0329d)
   - fix tgkill (1521e0a)
   - Fix FPREM flags calculation in F64 (632add6)

  - unittests
   - Adds negative integer x87 tests (ee58c5d)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Sat, 04 Feb 2023 01:29:51 +0000

fex-emu-@ARCH_SUFFIX@ (2301~2~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fixes focal

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Wed, 11 Jan 2023 20:07:04 +0000

fex-emu-@ARCH_SUFFIX@ (2301~1~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fixes focal

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Wed, 11 Jan 2023 20:04:27 +0000

fex-emu-@ARCH_SUFFIX@ (2301~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - ARM64
   - Moves RA functions to header (048daa4)

  - Arm64
   - Rename GetSrcPair, GetDst, and GetSrc (bf7d0f7)
   - Enables debug option for disassembling the JIT code (03a0613)
   - Inline Syscall spill optimization (0ebb15c)
   - Optimize SVE register spilling and filling (1ab4471)
   - Optimizing spilling and filling (9a8852f)
   - Reduce dispatcher to 1 page (65e8bf9)

   - VectorOps
    - Simplify FADDP result merging (344ec33)

  - Config
   - Fixes global application configs (dc9737a)

  - Crypto
   - Explicitly clear upper lane with VPCLMULQDQ (4c013c8)

  - Dispatcher
   - Calculate REG_ERR correctly using ARM ESR_EL1  (4f313f5)

  - Frontend
   - Handle 256-bit destination sizes directly (e8aa79b)

  - IR
   - Handle 128-bit VInsElement with SVE (94ae2e3)

  - LookupCache
   - Use a PMR map for our Blocklinks with monotonic allocator (b7358b4)
   - Optimize cache clearing and allocation (2b6a020)

  - OpCodeDispatcher
   - Optimize a case of GOT calculation (b42b4e0)

  - OpcodeDispatcher
   - Handle immediate variants of VPERMILPD/VPERMILPS (3904a52)
   - Handle VMASKMOVDQU (c6297ed)
   - Handle VPHSUBD/VPHSUBW (4786ddc)
   - Zip elements instead of for loop insertion in PHSUB  (58ec2b2)
   - Handle VDPPD/VDPPS (9b8c92e)
   - Handle VINSERTPS (6caf764)
   - Handle VMOVMSKPD/VMOVMSKPS (faa81f2)
   - Handle VPUNPCKHBW/VPUNPCKHWD/VPUNPCKHDQ/VPUNPCKHQDQ (64cd377)
   - Handle VUNPCKHPD/VUNPCKHPS (138f1fc)
   - Handle VPUNPCKLBW/VPUNPCKLWD/VPUNPCKLDQ/VPUNPCKLQDQ (6bc1c3f)
   - Handle VUNPCKLPD/VUNPCKLPS (4560c5b)
   - Handle VCVTSS2SI/VCVTTSS2SI/VCVTSD2SI/VCVTTSD2SI (4a88480)
   - Handle VCVTPD2DQ/VCVTTPD2DQ/VCVTPS2DQ/VCVTTPS2DQ (f379385)
   - Handle VPMULHRSW (82adc2f)
   - Handle VPMULHW/VPMULHUW (4a3af8d)
   - Handle VPHMINPOSUW (9d58514)
   - Handle VPMULDQ/VPMULUDQ (33e8f21)
   - Handle VCMPSD/VCMPSS (cecda7b)
   - Remove lingering debug log from VPFCMPOp (ce35128)
   - Convert runtime assert to static_assert in SHUFOps (345e9b9)
   - Handle VCMPPD/VCMPPS (0c651dd)
   - Handle VPSRLDQ (1668db0)
   - Remove unnecessary usage of VMov in VPSLLDQOp (515b3e4)
   - Handle VCVTDQ2PD/VCVTDQ2PS (4aed60e)
   - Handle VPSLLDQ (60a2fb1)
   - Simplify SHA1MSG1 implementation (d0cb329)
   - Handle immediate variants of VPSRLD/VPSRLQ/VPSRLW (72a3b18)
   - Handle 128-bit AVX AES instructions (1800451)
   - Handle immediate variants of VPSRAD/VPSRAW (1d92182)
   - Handle VPACKUSDW/VPACKUSWB (6e733bf)
   - Handle VPACKSSDW/VPACKSSWB (01d2284)
   - Handle vector versions of VPSRA{D, W} (78b53bf)
   - Handle remaining PEXTRW opcode (fabf453)
   - Handle VPMULL{D, B} (b26e410)
   - Handle vector variants of VPSRL{D, Q, W} (ad3bf18)
   - Handle VPEXTR{B, D, Q, W}/VEXTRACTPS (c86ba76)
   - Handle immediate variants of VPSLL{D, Q, W} (c1e301a)
   - Handle vector variants of VPSLL{D, Q, W} (58fab72)
   - Handle VPHADDW/VPHADDD (8ce6c08)
   - Handle VPMOVSXB{D, W, Q}/VPMOVSXW{D, Q}/VPMOVSXDQ/VPMOVZXB{D, W, Q}/VPMOVZXW{D, Q}/VPMOVZXDQ (dc2eaf6)
   - Narrow memory access with scalar rounding operations (0e233a9)
   - Move template impl to regular function where applicable (4b891d6)
   - Handle VROUNDS{D, S}/VROUNDP{D, S} (1ca3563)
   - Handle VINSERTF128/VINSERTI128 (4b21647)
   - Handle VPERM2F128/VPERM2I128 (f3d0fa6)
   - Handle VPERMQ/VPERMPD (60a4561)
   - Handle VHADDP{D, S} (ded257c)
   - Handle VPMAXS{B, D, W}/VPMAXU{B, D, W} (9de5840)
   - Handle VPMINS{B, D, W}/VPMINU{B, D, W} (40bab6b)
   - Handle VPADDS{B, W}/VPSUBS{B, W} (98a4541)
   - Handle VPADDUS{B, W}/VPSUBUS{B, W} (757602b)
   - Handle VPSUB{B, D, Q, W} (a90067f)
   - Handle VPSIGN{B, D, W} (1bc013d)
   - Handle VDIVP{D, S}/VDIVS{D, S} (a07a533)
   - Handle VMULP{D, S}/VMULS{D, S} (eefcea4)
   - Handle VMAXP{D, S}/VMAXS{D, S}/VMINP{D, S}/VMINS{D, S} (d6b137e)
   - Handle VSUBP{D, S}/ VSUBS{D, S} (db90390)
   - Handle VRCPPS/VRCPSS (2937344)
   - Handle VLDDQU (03fbb92)
   - Handle VPABS{B, D, W} (a57f3a6)
   - Handle VPCMPEQ{B, D, Q, W}/VPCMPGT{B, D, Q, W} (573896d)
   - Handle VRSQRTSS/VRSQRTPS (ab14375)
   - Handle VPBROADCAST{B, D, Q, W}/VBROADCASTI128 (ace90aa)
   - Handle VBROADCASTSD/VBROADCASTSD/VBROADCASTF128 (2123868)
   - Handle VLDMXCSR/VSTMXCSR (b73aeb8)
   - Handle VSQRTPD/VSQRTPS/VSQRTSD/VSQRTSS (d965ae0)
   - Handle VCOMISD/VCOMISS/VUCOMISD/VUCOMISS (7ac21e7)
   - Handle VPAVGB/VPAVGW (a98920d)
   - Explicitly zero upper lanes (e9aa368)
   - Handle VADDSD/VADDSS (5ac44ba)
   - Merge HADDP/PHADD into VectorALUOp (bf86df7)
   - Merge PAVGOp with VectorALUOp (3322f8b)
   - Merge PADDQOp, PSUBQOp, PADDSOp, PSUBSOp with VectorALUOp (9eaa45f)
   - Merge ANDNOp with VectorALUROp (4b16718)
   - Simplify VANDN (2bf7e09)

  - OpcodeHandler
   - Handle VADDSUBP{D, S} (905eb01)

  - ThunkDB
   - Clean up database loading (12b866c)

  - Thunks
   - Fix IDE integration (16969fc)

  - ThunksDB
   - Fix misspelt guest library names (e486833)

  - X86Tables
   - Restrict CVTDQ2PD and CVTTSD2SI to 64-bit memory accesses (91c00d2)

  - Misc
   - Create a new ARM64 Emitter and move JIT over to it. (ec55ecd)
   - Initial 32-bit host thunk feature support (d5f3a09)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Fri, 06 Jan 2023 15:58:39 +0000

fex-emu-@ARCH_SUFFIX@ (2212~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Const on unmodified argument (9ca34ca)
   - Minor optimization in AESKEYGENASSIST (c1d118c)
   - Optimize Break IR op codegen (c7dd6ff)

   - VectorOps
    - Simplify VMov IR op on SVE  (70e6ab5)

  - CMake
   - Fix typo in clang thunks option. (0030971)

  - Config
   - Disable multiblock by default (df25d4e)
   - Add support for steamid based configurations. (02ca94e)

  - Core
   - Replace a couple maps with tsl robin_map (57c5761)
   - Removes log about migrating to shared memory mode (8b6e9e0)

  - ELFCodeLoader
   - Calculate AT_MINSIGSTKSZ (e0fe916)
   - Fixes AT_PLATFORM null terminator (d7b0e84)
   - Pass through AT_SECURE (8afc3b8)
   - Ensure we set AT_SYSINFO for 32-bit (1d32df9)

  - EmulatedFiles
   - Defer cpuinfo file initialization to first access (8e2b0d1)

  - Externals
   - Update vixl submodule (f066abc)

  - FEXConfig
   - Sort named rootfs vector (71f658b)

  - FEXLoader
   - Make `IsInterpreterInstalled` check less horrible. (1dd5642)
   - Disables some AOT shutdown overhead when not enabled (f8b2a0b)

  - FEXServer
   - More Systemd fixes (5e5e5a3)

  - FEXServerClient
   - Disable confusing connection log (cc6306a)
   - Add some debug logs for when FEX can't connect to se… (3c8da3e)

  - IR
   - Handle 256-bit VExtr (5a403b7)
   - Removes the only uses of VSLI and VSRI (7d9ed4e)
   - Remove VLoadMemElement and VStoreMemElement (9cee012)
   - Handle 256-bit LoadRegister/StoreRegister (a9c5138)
   - Handle 256-bit VAddV (04d4c5e)

  - IntrusiveIRList
   - Add a utility helper for getting an OrderedNodeWrapper (3c88180)

  - IoctlEmu
   - Support radeon (fc28062)

  - Linux
   - Improve performance of hot paths in path searching (66e0d46)

  - OpcodeDispatcher
   - Handle VADDPD/VADDPS/VPADDB/VPADDW/VPADDD/VPADDQ (8f157e4)
   - Handle VANDPD/VANDPS/VPAND/VANDNPD/VANDNPS/VPANDN (c37fcf1)
   - Handle VORPD/VORPS/VPOR (34e39c9)
   - Handle VPXOR/VXORPD/VXORPS (4de6902)
   - Handle VZEROUPPER/VZEROALL (a374a9a)
   - Handle VMOVQ (b35c6c6)
   - Handle VMOVNTDQ/VMOVNTDQA/VMOVNTPD/VMOVNTPS (0841ff5)
   - Implement SGDT  (9912d41)
   - Moves all GPR and XMM accesses to direct register accesses (a4556e9)
   - Handle VMOVDQA/VMOVDQU (df761a9)
   - Handle VMOVDDUP (f8a199a)
   - Handle VMOVSHDUP/VMOVSLDUP (58f35ba)
   - Handle VMOVHPD/VMOVHPS (bc20f1e)
   - Handle VMOVLPD/VMOVLPS (69045db)
   - Handle VMOVAPD/VMOVUPD/VMOVUPS (2271a90)
   - Handle VMOVAPS (56ff09f)
   - Disable PCLMUL if not supported on host (c8293cb)

  - Syscalls
   - Minor optimization with initialization of syscall definition vector (4d2c4b4)

  - Thunks
   - Fix guest targets not being detected by IDEs (9158877)

  - Misc
   - x86_64/VectorOps: Separate 128-bit/256-bit paths (181d315)
   - Systemd fixes (d5f7e61)
   - InstallFEX.py: Adds support for Kinetic (aa837ed)
   - Update release process to include AUR (5336f01)

  - unittests
   - Expand VPCLMULQDQ unit test (9fea774)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 05 Dec 2022 22:09:11 +0000

fex-emu-@ARCH_SUFFIX@ (2211~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - 32bit
   - Fixes Debug build of VDSO (cf91ab9)

  - Allocator
   - Expand stack space when stealing virtual address space (000677a)

  - Arm64

   - BranchOps
    - Remove unused std::vector (74e18f4)

   - ConversionOps
    - Eliminate use of temporary in Vector_FToF (b1d98f4)

   - MemoryOps
    - Merge if statement into switch in ParanoidLoadMemTSO (199649b)
    - Remove lingering unnecessary ptrue instances (40d820f)

   - VectorOps
    - Make use of MOVPRFX where applicable (639d6e6)
    - Simplify SVE VSXTL/VSXTL2/VUXTL/VUXTL2 implementations (136f1e2)

  - ELFCodeLoader
   - Fixes Proton Experimental on 48-bit VA systems (2fa1a64)
   - Implement four more auxv values (fa5322d)

  - External
   - Update vixl submodule (fc6de5f)

  - FEXCore
   - Adds support for a timeline profiler interface (62a24bd)

  - FEXServer
   - Be robust against invalid packets. (64eb87e)

  - Flags
   - Refine _Bfe's shift (abb44d3)

  - IR
   - Handle 256-bit VInsElement (9e7daf6)
   - Handle 256-bit LoadContextIndexed/StoreContextIndexed (03f0edc)
   - Handle 256-bit StoreMem/StoreMemTSO/ParanoidStoreMemTSO (70a91ee)
   - Handle 256-bit LoadMem/LoadMemTSO/ParanoidLoadMemTSO (8a14f87)
   - Handle 256-bit LoadContext/StoreContext (d475b0b)
   - Handle 256-bit VTBL1 (2332c41)
   - Handle 256-bit VInsGPR (b7d9c00)
   - Handle 256-bit VExtractToGPR (b3ee5db)
   - Handle 256-bit Vector_FToI (7e81023)
   - Check for invalid conversion masks in Float_FromGPR_S (7291b10)
   - Handle 256-bit Vector_FtoF (b8f7e4c)
   - Handle 256-bit Vector_FToZS/Vector_FToS  (13003da)
   - Handle 256-bit Vector_SToF (cb17ee9)
   - Handle 256-bit VDupElement (27b022d)
   - Handle 256-bit VUnZip/VUnZip2 (780e3c7)
   - Handle 256-bit VZip/VZip2 (ab45db1)
   - Handle 256-bit VUShrNI/VUShrNI2 (bb38bcb)
   - Handle 256-bit VSQXTUN/VSQXTUN2 (6cc2912)
   - Handle 256-bit VSQXTN/VSQXTN2 (1c7d416)
   - Handle 256-bit VSMull/VSMull2 (3ac5e04)
   - Handle 256-bit VUMull/VUMull2 (78a0773)
   - Handle 256-bit VUXTL/VUXTL2 (e9f3a5b)
   - Handle 256-bit VUABDL (ebc45df)
   - Handle 256-bit VSXTL/VSXTL2 (f14a5ff)

  - Interpreter

   - MiscOps
    - Remove unused StopThread() function (d2e0dc9)

  - OpcodeDispatcher
   - Fixes ROR imm OF calculation (eca9353)
   - Fixes flag calculation on ROR and ROL by immediate (b1e475d)
   - Fixes FPREM1 C2 flag calculation (4a09a43)

  - Syscalls
   - Fixes 64-bit mmap and munmap (d1b235d)

  - Thunks
   - Add support for disabling thunks in config (004c323)
   - Fixes missing thunk librarie so versions (2272b30)
   - Fixes indirect thunks with 8+ arguments (6b3d888)
   - Update Vulkan thunk to v1.3.231  (ddc1027)

   - Guest
    - Enable SSE2 on thunks and set fpmath to sse (671f3e7)

   - X11
    - Reorder and sort X11 interface by headers included.  (8d373c1)

   - libX11
    - Fix recursive initialize (d838612)

  - ThunksDB
   - Fixes Thunks loaded boolean pointer check (b5fb1cb)

  - Utils

   - 64BitAllocator
    - Minor cleanups and optimization for munmap  (70a3ceb)

  - X87
   - Claim incoming float was in the range for trancendental ops (aa5e92b)

  - Misc
   - Segment register index optimization (ecf4891)
   - Implements DAA, DAS, AAA, AAS, AAM and AAD instruction (f26eccd)
   - Ensure Arm64Emitter uses FEX allocator (ffb4de9)

  - unittests
   - Amend mm register usage in H0F38/66_04.asm test (cada0d5)

   - asm
    - Adds more extensive FPREM/FPREM1 tests  (b726f60)

   - gvisor
    - Adds a bunch of tests to flakes (5bef13d)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 03 Nov 2022 06:29:06 +0000

fex-emu-@ARCH_SUFFIX@ (2210~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes SVE VectorImm (ad8526852)
   - Centralize location for register defines (169cfbbee)

   - VectorOps
    - Make use of static predicate registers (0fee355ff)

  - CI
   - Fixes struct verifier on Ubuntu 20.04 (f97a4afd8)
   - Adds support for flakes (96fecfd7c)

  - CMake
   - Add toolchain file for 32-bit cross-compiler (1ed3ecb40)
   - Extend AArch64 check to include arm64 (a583ebe59)

  - Docs
   - Update Release docs (c987e1ef4)

  - ELFCodeLoader
   - Map primary ELF more like the kernel  (b44b3401b)
   - Fixes dynamic non-interpreter ELFs (edca52860)
   - Map interpreter first (71f7ff510)

  - ELFCodeloader
   - Map once and then use MAP_FIXED to overwrite (d68b84bc2)

  - FEXConfig
   - Ensure APP_CONFIG_NAME isn't stored in json (8d69f539a)

  - FEXLinuxTests
   - Adds missing pthread_cancel flake status (c262362a0)
   - Migrate to Catch2 (8f70137b1)
   - Build 32-bit and 64-bit test variants separately (3448c8343)
   - Use the build system instead of setting up compile flags via source-code annotations (d2138694b)

  - FEXServer
   - Fix waiting on kernel version older than 5.3 (8f9d79934)

  - FHU
   - Convert to a interface target (dee85f14f)

  - IR
   - Handle 256-bit VSMul/VUMul (23dd056b6)
   - Handle 256-bit VRev64 (c412d073b)
   - Handle 256-bit VShlI/VUShlI/VUShrI  (c2b6aef6f)
   - Handle 256-bit VSShrS/VUShlS/VUShrS (51214d1be)
   - Handle 256-bit VFCMPORD/VFCMPUNO (7b4b9a80f)
   - Handle 256-bit VFCMPLT/VFCMPGT/VFCMPLE (25a8a0077)
   - Handle 256-bit VFCMPEQ/VFCMPNEQ (a67f7422b)
   - Handle 256-bit VCMPGT/VCMPGTZ/VCMPLTZ (ed8150cfb)
   - Handle 256-bit VCMPEQ/VCMPEQZ (462a163ba)
   - Handle 256-bit VBSL (6374175a6)
   - Handle 256-bit VSMax/VUMax (8d8b02928)
   - Handle 256-bit VSMin/VUMin (aa6a49932)
   - Handle 256-bit VNot (64c4fdccf)
   - Handle 256-bit VFNeg (d715ffbc8)
   - Handle 256-bit VNeg (1799d4c67)
   - Handle 256-bit VFRSqrt (dacd96cab)
   - Handle 256-bit VFSqrt (ca4d3bf64)
   - Handle 256-bit VFRecp (ea38b043c)
   - Handle 256-bit VFMax (a39746df2)
   - Handle 256-bit VFMin (2367a8e50)
   - Handle 256-bit VAddP (cb121d7f1)
   - Handle 256-bit VFDiv (50eba4066)
   - Handle 256-bit VFMul (447226576)
   - Handle 256-bit VFSub (3f8b872f1)
   - Handle 256-bit VFAddP (e573ddc2d)
   - Handle 256-bit VFAdd (eedbde6f1)
   - Handle 256-bit VPopcount (4e441e5a0)
   - Handle 256-bit VAbs (3e287a36c)
   - Removes Mov IR op (46bde401b)
   - Removes VExtractElement (01beac495)
   - Removes unnecessary VBitcast IR op (fcd981e6b)
   - Removes SplatVector{2,4} (2b9cc9666)
   - Removes VInsScalarElement (82eba2229)

  - Interpreter
   - Handle 256-bit VSShr/VUShl/VUShr (4d6e15d7a)
   - Use constant for AVX register size where applicable (808e1c033)
   - Handle 256-bit VMov (412793c21)
   - Handle 256-bit VAnd/VBic/VOr/VXor (b5cb42924)

  - JITs
   - Handle spilling/filling 256-bit vectors (6742e0c37)
   - Expand max spill slot size to 32 bytes (0d0d116bd)

  - SMC
   - Fix possible deadlock (8da9ebc2e)

  - Scripts
   - Updates DefinitionExtract (3977e1f29)

  - StructVerifier
   - Fixes CI failure (d4b5bf0f7)

  - ThunkLibs
   - X11/Xext: Removes two functions that don't exist on 32-bit (cc4c705fc)

  - Thunks
   - Add support for building with clang (2b1ef9735)
   - Adds dependency on linker script (eaddf7f1a)
   - Implement the Thunk IR op for 32-bit mode (1ea00f68a)
   - Adds functional thunk testing to CI (a59097763)

   - Host
    - Adds bool operator to fex_guest_function_ptr (3237de308)

   - gen
    - Use fmt for writing formatted output (704afed97)

   - libvulkan
    - Fixes print for 32-bit (d8c2a8271)

  - VDSO
   - Fix vsyscall (5cf59408a)

  - VectorOps
   - Handle 256-bit VURAvg (977d6dd24)
   - Handle 256-bit VUMinV (0261ed353)
   - Extend VSQAdd/VSQSub/VUQAdd/VUQSub (f34f1309a)
   - Extend VAdd/VSub (0ad52b7d1)

  - Misc
   - Add opencl thunk db (b693112c8)
   - 32-bit VDSO support (6f6f3c9dc)
   - Update vixl external (832a320e2)
   - Move thunk generator logic from ASTVisitor to ASTFrontendAction (54915f87c)
   - Add support for the vixl simulator (b36ec152d)

  - cmake
   - Adds uninstall target (6adf22761)

  - unittests
   - Disable gvisor pselect test (acddc0323)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Thu, 13 Oct 2022 07:51:12 +0000

fex-emu-@ARCH_SUFFIX@ (2209~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - 64BitAllocator
   - Fixes a significant state tracking perf problem (123b672)

  - Allocator
   - Simplify StealMemory, make it less chatty with kernel space (04678f8)

  - Arm64

   - JIT
    - Rename CanUseSVE to HostSupportsSVE (7d8950d)

  - CI
   - Build Thunks (e544591)

  - FDUtils
   - Don't make unknown get_fdpath fatal (336dedb)

  - FEXRootFSFetcher
   - Fix crash if curl fails to download rootfs definition file (31fefaa)

  - FEXServer
   - Support socket path override (a2f4f49)

  - Github
   - Fix fresh runner rootfs checkout (d619968)

  - HostRunner
   - Handle upper YMM lanes in sigsegv handler (d5c83a2)

  - IRLoader

   - TestHarnessLoader
    - Don't build if not building tests (097184c)

  - InterpreterOps
   - Extend SSAData size to accomodate 256-bit operations (98dbfbe)

  - Linux
   - Emulate classic getdents syscall for x64 and x32 (9de25c2)

  - Syscalls
   - Use underscored shm syscall names  (bbcca80)

  - Termux
   - Add android-shmem library (0adbe31)

  - Thunks
   - Consolidate all generated code to one file per library per platform (c17da25)
   - Adds VDSO thunk library  (53623ff)
   - Minor cleanups for signature-based function pointer thunking (e6acdcc)
   - Support direct thunk config in configuration files  (84a95ad)
   - Fix compile without jemalloc (d5138f5)

   - X11
    - Support Variadic stack packing (fbb008e)
    - Adds missing XLibint functions (998a3d8)

  - VectorOps
   - Extend VAnd/VBic/VOr/VXor (e776f4c)
   - Extend VMov (e7d7dd1)
   - Extend VectorImm (8439cf4)
   - Extend VectorZero (d03b6a9)

  - Misc
   - New domain. (7f9edbf)
   - x86_64/JIT: Resolve lingering fmt deprecation warning (37ccb13)

  - cmake
   - fix incorrect assumption about the value of git's core.abbrev (c03a7fd)

  - unittests
   - Support skipping unit tests based on host feature support (1fe6fc3)

   - ThunkLibs
    - Fix warning about "dangerous" use of tmpnam (12fee91)

 -- Ryan Houdek <houdek.ryan@fex-emu.com>  Mon, 05 Sep 2022 17:38:02 +0000

fex-emu-@ARCH_SUFFIX@ (2208~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AppConfig
   - Fix bug with filename (ac23bce)

  - Arm64

   - JIT
    - Remove unnecessary [[maybe_unused]] attributes (89aa590)

  - Arm64Dispatcher
   - Amend memcpy in SpillSRA  (f5e18cc)

  - Arm64Emitter
   - Re-add use of stp/ldp with hosts that don't support SVE2 (8589119)

  - CMake
   - Support multiple json files in the root of Data/ (bd296d7)

  - CPUID
   - Detect Cortex-X1C (c9f0ecb)

  - Config
   - Support a global configuration file (3a64ea1)

  - Dispatcher
   - Fix SRA enabled check in signal delegator handlers (0dfe617)

  - Externals
   - Update fmt to 9.0.0 (54f62b6)

  - FEXBash
   - Changes PS1 to hopefully help users (a72ebfd)

  - FEXConfig
   - Some quality of life improvements (164299c)

  - FEXCore
   - Fix-up edge case behaviour on faulting instructions  (8037231)
   - Adds assume optimizing LogManager function  (3d347ed)
   - Support synchronizing RIP on block entry through config (80909ea)

  - FEXRootFSFetcher
   - Adds runtime checks for image mounting tools (cfd59db)
   - Actually wire up -a -x (3aabe07)
   - Add some options for automation without user intervention (f6fcfba)

  - FEXServer
   - Fix unsafe vector insert/removal (0982ec6)

  - HarnessHelpers
   - Handle SSE register offsets in CompareStates (0e93ba5)

  - Interpreter
   - Move argument names over to IR names (3f9a1c3)

  - JitSymbols
   - Only initialize perf map file if using (a984674)

  - Linux
   - Fixes hang in close_range  (4dfe0a0)
   - Only install syscall handlers for the arch we launched with (0186616)

  - Syscalls
   - Removes staging vector usage (6903159)

  - Telemetry
   - Support executable names through wineserver (ce0c24e)

  - Thunks
   - Extends libGL interface to support more functions (1051cd9)
   - Make glXGetProcAddress self-query work  (dd7e1ba)
   - Make unknown glXGetProcAddress non-fatal (ab228c1)
   - Use external Vulkan-Headers  (9664d98)
   - Make GL guest thunks implicitly load libX11.so (5eab087)

   - X11
    - Distinguish between host and guest pointers in XFree (6933c2a)

  - Misc
   - Disable UnitTestGenerator (45330fd)
   - Synchronized Block Linking (b9c9c7d)
   - Implement signature-based thunking of function pointers (62d9961)
   - Cleanup syscalls headers (c3c52d0)
   - json_ir_generator: Remove Args() functions from IR structs (98d935d)
   - Fix SOMA and sigaction definition (b07660c)
   - improve compile ability for older linux (c1688fa)
   - AVX initial groundwork (c173405)
   - x86_64: Migrate args over to named IR arguments (3ac6ba0)

  - cmake
   - Remove the static-pie compilation option (a112db1)

  - drm
   - Update to v5.19 (1fa6bf1)

  - unittests
   - Adds 32-bit into test  (f2602e3)

  - vixl
   - Update (9b685ba)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Wed, 10 Aug 2022 15:23:53 +0000

fex-emu-@ARCH_SUFFIX@ (2207~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AOTIR
   - Fix IRList delete (fb41ba1)
   - Fix RAData free (9242e59)

  - Arm64

   - EncryptionOps
    - Fix register specifiers in PCLMUL movs (63b70ff)

   - JIT
    - Use IR names in opcode implementations (19b0a9c)

  - Backends
   - Unified dispatch, interface rework, cleanups (072690a)

  - CI
   - Auto rootfs fetching (c027ace)

  - CMAKE
   - Create directories during configuration, fixes endless generation of unittests (e62bc24)

  - CMake
   - Check for binfmt_misc conflicts before install (6d2f98a)

  - CPUID
   - Enable the hypervisor bit (da8dbf1)

  - Common
   - Support application profiles for games launched through wine (3913dd6)

  - Config
   - Fixes AppConfig for wine-preloader (ae6a57e)

  - Context
   - Fix CreateThread partial initialization issue (eac579f)
   - Decouple from CodeLoader, introduce generic CustomIREntrypoints (b0a31f7)

  - CoreState
   - Add register size constants (1c1ad87)

  - Dispatcher

   - Arm64
    - Fix vixl assert (0f696c6)

  - Dispatchers
   - Use thread local emitters for backend callbacks (4f9bc70)

  - FDUtils
   - Fix get_fdpath (aa17f64)

  - FEXGDBReader
   - Fix install path (b3e090c)

  - FEXRootFSFetcher
   - Update and fix xxhash file hashing (c0a8984)

  - FEXServer
   - Stop leaking FDs to subprocesses (b7806e4)
   - Minor changes (1f1d070)
   - Adds -w option for waiting on current FEXServer (b020e59)
   - Adds new FEXServer service (5a19425)

  - FEXServerClient
   - When running under pressure-vessel don't use FEXServer rootfs (9110546)

  - IPR
   - Store copy of IRLists, Dispatcher cleanups (790bd97)

  - IR
   - Remove GuestCallDirect, GuestCallIndirect (e4d659a)
   - add IsFragmentExit, IsBlockExit (2d3c6ef)

  - Invalidations
   - Move invalidation locks to Context (ffcde18)

  - Ioctl
   - Safely access v3d csd ioctl structure (158ba1a)

  - Ioctl32
   - Fix DRM_IOCTL_WAIT_VBLANK (982518d)

  - JITs
   - Qualify external includes consistently (b05e5ce)

  - Linux
   - Fixes for clone3 stack size (1494aac)
   - Make `get_fdpath` more optimal (542ab04)
   - Fixes 32-bit allocator range scanning (4c73c71)
   - Fixes `open` syscall emulated path handling (4323493)

  - OpcodeDispatcher
   - Handle CLMUL opcode extension (9e9ceb3)

  - SMC
   - Track code pages before frontend decode (bbd9eb5)

  - Scripts
   - Allow user override on tagged version (aafe7ff)

  - TSO
   - Add auto migration optimisation for applications that don't need TSO (c99d1e4)

  - Tests

   - IRLoader
    - Silence missing override warning (ade3a52)

  - ThunkLibs
   - Fix Guest.h (302a6c9)
   - silence warnings (30a28ff)

   - vulkan
    - Work around lack of generic callback support in VK_EXT_debug_report (4771a34)

  - Thunks
   - Implement generic callback support (aec5b21)
   - Soften error condition to be non-fatal (3b8491b)
   - Adds libvulkan steam pinned library thunking support (6b226dd)
   - Fix std::set crash (6a43db8)
   - Add fex:is_lib_loaded (88b94be)
   - Support returning host function pointers to the guest (04a1ac9)
   - Support pressure-vessel prefixes (e2e6f2a)

   - vulkan
    - Disable debug report callback (751b66d)

  - ThunksDB
   - Fix String.find error check (d8fa53a)

  - ValueDominanceValidation
   - Avoid stack exhaustion when aggregating predecessors (124097d)

  - Vulkan
   - Handle queries for unknown functions more gracefully (e137c2e)

  - Misc
   - Support EroFS (46fcbe2)
   - Allow building thunks on a wider range of platforms (ad6fd5a)
   - Fix inconsistent allocation schemes used for RegisterAllocationData (8a21eca)
   - Make Dispatcher per Context from per Thread, Simplify TestHarnessRunner (0a62a4c)
   - IR.json: Correct 'Dest' key to 'Desc' (51c5f94)

  - gdb
   - jit integration (4449b60)

  - unittests
   - Classify CPU based on CPU features (d005fdc)
   - Disable known flake in posix tests (a97fb2f)
   - Add FEXLinuxTests with a few tests (cb0935c)

   - ThunkLibs
    - Fix test failures due to missing FEX_PACKFN_LINKAGE define (a2c9d5a)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Thu, 07 Jul 2022 17:14:03 +0000

fex-emu-@ARCH_SUFFIX@ (2206~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - AOTIR
   - copy RAData and IRList, make sure data is accessible (da2e44d)

  - AppConfig
   - Inject --no-sandbox in to steamwebhelper (c14c0c2)

  - ArchHelpers
   - Adds relocation struct defines (b5ae9e4)

  - Arm64
   - Fix LDAPUR/STLUR DMB backpatch (27f2e0b)
   - Adds support for RCPC2 extension (f8ba373)
   - Fixes AtomicSwap (70988cc)

  - Arm64Emitter
   - Optimize constants with ADRP and ADR (912dbfe)

  - CMake
   - C/C++ flags for defined singed overflow warping (2e05349)
   - Add option to use the mold linker (5884114)

  - CompileService
   - Removes no longer necessary service thread  (b1033ed)

  - Config
   - Adds code cache config option (278ca52)

  - Core
   - Adds Code Object Cache service  (13f3c6e)
   - context-wide guest code invalidations (d810988)

  - EmulatedFiles
   - Fixes temporary file flags (4fbc266)

  - F64
   - Implement FCW using host rounding mode (db3854e)
   - Fix FILD and FIST for Size < 8 (89d6752)

  - FEXBash
   - Set PS1 to make it more obvious when running under FEX (ec38d58)

  - FEXCore
   - Adds refcount_shared_mutex class (1e597bf)
   - Reclaimable thread pool allocator (8a7f395)

  - FEXLoader
   - Fix create_directories check for aotir .path file writting (90f338d)

  - FEXLogServer
   - Stop improper use of std::erase_if (d523b7a)

  - FEXRootFSFetcher
   - Don't continue download (fa87c73)

  - JitSymbols
   - Print file+offset if possible (a715627)

  - Linux
   - Fixes 32-bit mmap (3fd136b)

   - MemAllocator32Bit
    - Add missing lock to shmdt, fix error returns (b2b4c2b)

  - OpcodeDispatcher
   - Implement SHA256 instructions (3bbff8a)
   - Handle SHA-1 instructions (8dd9a5b)
   - Implements support for PAUSE  (da48020)
   - Fixes pextrb with high registers (fe11bd2)
   - Remove debugging dump statement (c8dc663)
   - Adds support for non-temporal loadstores (ba78dff)

  - ScopedSignalMask
   - Add shared mutex support, move constructors (8e36f53)

  - Syscalls
   - Fixes clone3 stack pointer (0ed9654)

   - Linux
    - Add guest[Mmap/Munmap] (b9d878b)
    - Refactor guest mman tracking (ce0f5db)

  - TestHarnessRunner
   - Use guest mapper for test harness files (b78af2f)

  - X86Tables
   - Leave shouldn't end block (4f42632)

  - Misc
   - Struct verifier fixes and reenable (c6153d6)
   - v5.18 support (969d8f8)
   - Fix dangling curl hyphen (1dee54a)
   - SMC detection via segfaults (5460a24)
   - Standarized TODO markers: FEX_TODO, FEX_TODO_ISSUE (73d43c1)
   - Clean up and document ScopedSignalMask (5379f0a)
   - Object cache named region no-op implementation (ee2d417)
   - JIT relocation handling support (c5dacab)
   - 32-bit FSGS instruction fixes. (9bc631a)
   - V5.17 support (2f7dcb8)
   - Emulate reduced-precision X87 with 64-bit host FPU ops (42a6320)

  - mtrack
   - Fixes 32-bit shmat, shmdt tracking, guaranteed invalidation atomicity (d82d294)

  - unittests
   - Reenable atomic tests on ARMv8.0 (0fc6d6b)
   - Investigate failing CI changes (7227ee9)
   - Workaround runner issues (ce5297b)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sat, 04 Jun 2022 20:05:54 +0000

fex-emu-@ARCH_SUFFIX@ (2204~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - CPUID
   - Adds 4000_0001h function (977bda97)

  - Documentation
   - Adds hypervisor CPUID information (1f1c2149)

  - FEXCore
   - Delete IR after it is used (a247df50)
   - Fixes #1618 (60c7ea6e)
   - Removes unused debug data (8422fc63)

  - FileManager
   - Fix realpath failed on debian buster (91665fdf)

  - JIT
   - Adds comment to EmitDetectionString (d39df8d3)

  - JITArm64
   - Get long divide out of the hot path (8ad14728)

  - JITs
   - Emit identification string in the code buffers (23a1c64b)

  - Linux
   - Fixes MAP_32BIT supported range (fad91bb8)

  - OpcodeDispatcher
   - Fixes SIGILL on unsupported host instructions (042cd354)
   - Fixes FNINIT (187c6418)

  - Scripts
   - Updates AArch64 fit for Clang 14 (6b3cd3d3)

  - SignalDelegator
   - Adds missing include (b43937a7)

  - Softfloat
   - Fixes FSCALE (56779245)

  - TestHarnessRunner
   - Flush log on asserts (ebd0edba)

  - Misc
   - GDBServer improvements: Three's a crowd (7b0265ff)
   - Gdbstub improvements: The sequel (6a5abd36)
   - GDBServer improvements (53ffe5df)
   - Adds a cmake option for forcing a termux build (5de6c866)
   - Change page define usages over to self-defined (f5f9512d)
   - Disables GUI applications in a Termux build (fb27cb43)
   - Update ReleaseProcess docs for Termux (94664580)

  - docs
   - Remove stale text (5cc0c0a3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Tue, 19 Apr 2022 08:43:38 +0000

fex-emu-@ARCH_SUFFIX@ (2203~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sun, 06 Mar 2022 12:52:29 +0000

fex-emu-@ARCH_SUFFIX@ (2202~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Sun, 06 Feb 2022 06:51:45 +0000

fex-emu-@ARCH_SUFFIX@ (2201~8~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  - Arm64
   - Fixes vixl assertions around ubfm usage (5654f9a0)
   - Fixes MapSelectCC FGT flag (13087f84)
  .
  - CMake
   - Adds an OVERRIDE_VERSION option (08085998)
   - Adds a TUNE_CPU option (51466519)
   - Adds experimental libc++ option (f3a27a57)
  .
  - CPUID
   - Fixes another memory overflow issue (0e45b98f)
   - Fixes crash on unknown CPU (be3e3a35)
  .
  - Config
   - Enables all host threads by default (edce9818)
   - Sanitize Core option (9bffaeea)
  .
  - Context
   - Take some arguments as pointer-to-const (9d439047)
  .
  - Dispatcher
   - Disables unsync context message (154468c1)
   - Adds more state reconstruction to state restore (fa6f1b1d)
  .
  - Docs
   - Adds documentation about the FEX monthly release process (a65e7a09)
  .
  - FEXConfig
   - Removes jemalloc usage (c65be9f5)
  .
  - FEXCore
   - Don't use Run() inside RunUntilExit() (0bf57765)
   - Fixes a memcpy overflow in processor brand (340699ca)
   - Fixes FEXCore_Base config dependency (95bd309d)
   - Implements recoverable INTO instruction (cd4269f4)
   - Reorganizes some AOT related code (d4655fbb)
  .
  - FEXRootFSFetcher
   - Remove 0x prefix on hash (b72245a2)
   - Adds a new tool to help set up a new RootFS (72e8a997)
  .
  - GDBServer
   - Fixes long string packet encodings (88ce9b5c)
  .
  - HostFeatures
   - Detect if the host CPU suports float exceptions  (117cbde2)
   - Consolidates HostFeatures flags (e24eb7a7)
  .
  - IR
   - Fixes sized constant mask (565d1e27)
  .
  - Linux
   - Fixes pidfd_send_signal for 32-bit (ac63a2ba)
   - Finish 32-bit msqid_ds usage (98210fdf)
   - Implements the remaining 32-bit syscalls (bc120b9f)
   - Fixes build on Ubuntu 20.04 take 3 (8f835678)
   - Fixes build on Ubuntu 20.04 take 2 (059e8a90)
   - Fixes build on Ubuntu 20.04 (02005e71)
   - Fixes Ubuntu 20.04 compilation on AArch64 (47bd4795)
   - Fixes semid_ds_64 definition (f2fd9d9e)
   - Fixes 32-bit shmctl (45430e95)
   - Adds the safe syscall unimplemented gap for x86-64 (e05d116b)
  .
  - LinuxSyscalls
   - Enable warnings (75e5df54)
  .
  - NetStream
   - Move NetBuf definition into cpp file  (9860e8b7)
  .
  - OpcodeDispatcher
   - Handle PDEP (0a3a270a)
   - Handle PEXT (91984003)
  .
  - RootFS
   - Stop trying to retry rootfs after five times (a45bc759)
   - Be more robust against stale lock files (d4b31cd4)
  .
  - Scripts
   - Adds a python script that can hand hold a user through FEX install (b276750c)
  .
  - X86Tables
   - Build Unknown op definition tables at compile time (e8670bba)
  .
  - Misc
   - Stop hardcoding /usr/bin paths (1d5bd152)
   - Improves compile ability for older libraries (c691d709)
   - More AOT code movement (43dc232e)
   - FEXMountDaemon squashfs fixes. (ea73c9d7)
   - Implements RDTSCP (ee821b9c)
   - Update jemalloc for fixed libc overrides (c43af0e1)
   - CPUID Expose Hybrid flag and CPU names (9394e49c)
   - Speed up initialization of X86Tables (e99a23cf)
   - Implement thunk library generation using libclang (425d9323)
   - Implements CLZero instruction (5f0dfcd7)
   - {x32, x64}/Thread: Make use of .data() instead of .at(0) (b6499ac7)
   - Adds a new ReentrantMutex to use for FEXCore (b9c49027)
  .
  - gvisor
   - Disables flaky test (e62cb417)
  .
  - unittests
   - Fixes a missing dependency on ASM tests (b078f511)
   - Enables remaining unaligned atomic tests on ARMv8.0 (fd042476)
   - Fixes known failures (5c4112f1)
  .
  - x32
  .
   - Socket
    - Resolve sign comparison mismatch cases (097f48f3)

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Tue, 04 Jan 2022 03:13:28 +0000

fex-emu-@ARCH_SUFFIX@ (2201~7~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fix package triggers

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 23:38:20 +0000

fex-emu-@ARCH_SUFFIX@ (2201~6~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Adds binfmt_misc triggers on FEXLoader/FEXInterpreter change
  Adds missing binfmt postinst files

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 22:35:55 +0000

fex-emu-@ARCH_SUFFIX@ (2201~5~@DISTRO_SERIES_LETTER@) @DISTRO_SERIES@; urgency=medium

  Fix fortify crashes

 -- Ryan Houdek <houdek.ryan@fex-emu.org>  Mon, 03 Jan 2022 04:07:04 +0000


